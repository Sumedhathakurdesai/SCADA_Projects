<syncfusion:ChromelessWindow x:Class="IndiSCADA_ST.View.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IndiSCADA_ST.View"
        mc:Ignorable="d"
        xmlns:global="clr-namespace:IndiSCADAGlobalLibrary;assembly=IndiSCADAGlobalLibrary"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:p = "clr-namespace:IndiSCADA_ST.Properties"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:Viewmodel="clr-namespace:IndiSCADA_ST.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        TextElement.Foreground="WhiteSmoke"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="21"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="Humanst521 Lt Bt"
        Title="{x:Static p:Resources.Settings}"  Background="#FFFFFFFF" TitleBarHeight="40" TitleFontSize="17" WindowStyle="None" ResizeMode="NoResize"  TitleBarForeground="White" TitleBarBackground="#00786B"  Topmost="false" WindowStartupLocation="CenterScreen" WindowState="Maximized" >
    <Window.Resources>
        
        <DataTemplate x:Key="CellTemplateChemicalName">
            <DockPanel>
                <Border BorderThickness="1" BorderBrush="LightBlue">
                    <Grid  HorizontalAlignment="Center">
                     <Grid.ColumnDefinitions  >
                        <ColumnDefinition Width="Auto" /> 
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>                      
                
                    <TextBlock Name="chemical1" Grid.Row="0" HorizontalAlignment="Left"  Grid.Column="0" FontSize="11"  FontFamily="Arial" Background="Transparent" Foreground="Black" Margin="2" Text="{Binding ChemicalName1 ,UpdateSourceTrigger=PropertyChanged}"  />                        
                    <TextBlock Name="chemical2" Grid.Row="1" HorizontalAlignment="Left"  Grid.Column="0" FontSize="11"  FontFamily="Arial" Background="Transparent" Foreground="Black" Margin="2" Text="{Binding ChemicalName2 ,UpdateSourceTrigger=PropertyChanged}" />                        
                    <TextBlock Name="chemical3" Grid.Row="2" HorizontalAlignment="Left"  Grid.Column="0" FontSize="11"  FontFamily="Arial" Background="Transparent" Foreground="Black" Margin="2" Text="{Binding ChemicalName3 ,UpdateSourceTrigger=PropertyChanged}"/>                        
                    <TextBlock Name="chemical4" Grid.Row="3" HorizontalAlignment="Left"  Grid.Column="0" FontSize="11"  FontFamily="Arial" Background="Transparent" Foreground="Black" Margin="2" Text="{Binding ChemicalName4 ,UpdateSourceTrigger=PropertyChanged}"/> 
                    <TextBlock Name="chemical5" Grid.Row="4" HorizontalAlignment="Left"  Grid.Column="0" FontSize="11"  FontFamily="Arial" Background="Transparent" Foreground="Black" Margin="2" Text="{Binding ChemicalName5 ,UpdateSourceTrigger=PropertyChanged}"/> 
                 
                  </Grid> 
                </Border>
            </DockPanel>
        </DataTemplate>
        
        <ControlTemplate x:Key="validationTemplate">
            <Grid>
                <Label Foreground="Red" HorizontalAlignment="Right" VerticalAlignment="Center">Please insert a integer</Label>
                <Border BorderThickness="1" BorderBrush="Red">
                    <AdornedElementPlaceholder />
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Height" Value="40" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontFamily" Value="Humanst521 Lt Bt" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style x:Key = "BtnRectAutoManual" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoManual}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoManual}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnRectOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnStationSelection" TargetType="Button" >
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/> 
            <Style.Triggers>
                <DataTrigger Binding="{Binding StationEnter}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ENTER"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding StationEnter}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="ENTER"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "BtnNitricStationSelection" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding NitricStationSelection}" Value="1">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Nitric 2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding NitricStationSelection}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Nitric 1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key = "BtnRectOnOFFStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding OnOffStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding OnOffStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnRectAlarmStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AlarmStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AlarmStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnRectResetAmpHr" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ResetAmpHr}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ResetAmpHr}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnTopSprayManualOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnTankBypassOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnTrayBypassOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnBarrelBypassOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding BypassOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "BtnRotationBypassOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RotationBypassOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RotationBypassOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "BtnTopSprayServiceOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnTopSprayOnOFFStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnTopSprayTripStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TripStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding TripStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key ="BtnTopSprayAutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoManual}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoManual}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnUtilityManualOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnUtilityServiceOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnUtilityOnOFFStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnUtilityTripStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TripStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding TripStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key ="BtnUtilityAutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoManual}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoManual}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnAgitationTripStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TripStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding TripStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnAgitationOnOffStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnAgitationServiceOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ServiceOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key ="BtnAgitationAutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoManual}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoManual}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnAgitationManualOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ManualOnOff}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--base barrel motor styles-->
        <Style x:Key = "BtnBaseBarrelMotorOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseBarrelMotorOnOFF}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="On"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding  BaseBarrelMotorOnOFF}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Off"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--<Style x:Key = "BtnBaseBarrelMotorOnOFF1" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseBarrelMotorOnOFF}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="On"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding  BaseBarrelMotorOnOFF}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Off"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->


        <Style x:Key = "BtnBaseBarrelMotorTrip" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseBarrelMotorTrip}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
                <DataTrigger Binding="{Binding  BaseBarrelMotorTrip}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnBaseBarrelMotorStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseBarrelMotorStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
                <DataTrigger Binding="{Binding BaseBarrelMotorStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        

        <Style x:Key = "BtnAgitationHomeProxy" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HomeProxy}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HomeProxy}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnDosingManualOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ManualONOFF}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ManualONOFF}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key ="BtnDosingAutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoManual}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoManual}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnDosingTimeFlowrateBased" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding FlowRateTimerBased}" Value="0">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="FlowRate"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FlowRateTimerBased}" Value="1">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Time"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnDosingOP" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ONOFFStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ONOFFStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="OFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnLowSPBypass" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LowBypasspH}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LowBypasspH}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnHighSPBypass" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HighBypasspH}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HighBypasspH}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnLowSPBypassTemp" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LowBypassTemp}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LowBypassTemp}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnHighSPBypassTemp" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HighBypassTemp}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HighBypassTemp}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnLowSPBypassDipTime" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LowBypass}" Value="True">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LowBypass}" Value="False">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnHighSPBypassDipTime" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HighBypass}" Value="True">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HighBypass}" Value="False">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnLowSPBypassDipTimeEdit" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LowBypass}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LowBypass}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not Bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "btnHighSPBypassDipTimeEdit" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HighBypass}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Bypass"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HighBypass}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Not bypass"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--base barrel motor styles-->
        <Style x:Key = "BtnOilSkimmerMotorOnOFF" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseOilSkimmerOnOFF}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding  BaseOilSkimmerOnOFF}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "BtnBaseOilSkimmerTrip" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseOilSkimmerTrip}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
                <DataTrigger Binding="{Binding  BaseOilSkimmerTrip}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "BtnBaseOilSkimmerStatus" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionLightButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding  BaseOilSkimmerStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
                <DataTrigger Binding="{Binding BaseOilSkimmerStatus}" Value="0">
                    <Setter Property="Background" Value="#FF3120D4"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <Viewmodel:SettingsViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding  Exit}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <dragablz:TabablzControl Background="#EBFFFD" SelectedIndex="{Binding SelectedSettingTab,UpdateSourceTrigger=PropertyChanged}" AllowDrop="False" FixedHeaderCount="7">
            <!--0-->
            <TabItem Header="{x:Static p:Resources.Rectifier}" Height="250" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*" />
                        <RowDefinition Height="600*" />
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewRectifier" Grid.Column="0" Grid.RowSpan="2"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding RectifierIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.RectifierName}" DisplayMemberBinding="{Binding RectifierName}">
                                   
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ManualAuto}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnRectAutoManual}" Command="{Binding Path=DataContext.RectifierAutoManual, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ManualOnOff}" Width="135" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Name="a" Height="50" Style="{StaticResource BtnRectOnOFF}" Command="{Binding Path=DataContext.RectifierOnOff, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.LowSetPoint}" Width="110" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="A" Text="{Binding LowSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.RectifierLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.RectifierLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.HighSetPoint}" Width="110" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="A" Text="{Binding HighSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.RectifierHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.RectifierHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.AppliedCurrent}" Width="130">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding AppliedCurrent}" materialDesign:TextFieldAssist.SuffixText="A"></TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Calculated Current" Width="130">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  Text="{Binding Calculated , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="A" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateCalculatedCurrent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateCalculatedCurrent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding RectifierNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ManualCurrent}" Width="130">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="A" Text="{Binding ManualCurrent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateManualCurrent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateManualCurrent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ActualCurrent}" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  IsReadOnly="True" Text="{Binding ActualCurrent}" materialDesign:TextFieldAssist.SuffixText="A"></TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ActualVoltage}" Width="130">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding ActualVoltage}" materialDesign:TextFieldAssist.SuffixText="V"></TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.AmpHr}" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding AmpHr}" materialDesign:TextFieldAssist.SuffixText="A-h"></TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.CumulativeAmpHr}" Width="150">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding CuAmpHr}" materialDesign:TextFieldAssist.SuffixText="A-h"></TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ResetAmpHr}" Width="120" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnRectResetAmpHr}" Command="{Binding Path=DataContext.RectifierampReset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                
                                <GridViewColumn Header="{x:Static p:Resources.AlarmStatus}" Width="100" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnRectAlarmStatus}"></Button>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <!--<GridViewColumn Header="On/Off Status" Width="90" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnRectOnOFFStatus}"></Button>
                                           
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->
                            </GridView>
                        </ListView.View>
                    </ListView>
                    
                </Grid>
            </TabItem>

            <!--1-->
            <TabItem Header="{x:Static p:Resources.TemperatureAndpH}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1000*" />
                        <!--<RowDefinition Height="500*" />-->
                        <!--<RowDefinition Height="500*" />-->
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewTemperature" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding TemperatureIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.StationName}" DisplayMemberBinding="{Binding ParameterName}" >

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.TemperatureHighSP}" Width="180"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="°C" Text="{Binding HighSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateTempHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateTempHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.TemperatureLowSP}" Width="180" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="°C" Text="{Binding LowSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateTempLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateTempLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.TemperaturePV}" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding ActualTemperature}"  materialDesign:TextFieldAssist.SuffixText="°C">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.TemperatureSV}" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="°C" Text="{Binding ActualSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateTempActualSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateTempActualSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TemperatureID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewpH" Grid.Column="1"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0"   HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding pHIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.StationName}" DisplayMemberBinding="{Binding ParameterName}">

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.pHHighSP}" Width="180"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="pH" Text="{Binding HighSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdatepHHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdatepHHighSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.pHLowSP}" Width="180" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="pH" Text="{Binding LowSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdatepHLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdatepHLowSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.pHPV}" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding ActualpH}"  materialDesign:TextFieldAssist.SuffixText="pH">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>                              

                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>

            <!--2-->
            <TabItem Header="{x:Static p:Resources.Dosing}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewDosing" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding DosingIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.StationName}" DisplayMemberBinding="{Binding StationName}" Width="auto">

                                </GridViewColumn>

                                <!--<GridViewColumn Header="{x:Static p:Resources.ChemicalName}"  DisplayMemberBinding="{Binding ChemicalName}" Width="auto">

                                </GridViewColumn>-->

                                <GridViewColumn Header="{x:Static p:Resources.ChemicalName}"  CellTemplate="{StaticResource  CellTemplateChemicalName}"></GridViewColumn> 
 

                                <GridViewColumn Header="{x:Static p:Resources.AutoManual}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnDosingAutoMan}" Command="{Binding Path=DataContext.DosingAutoManual, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ManualOnOff}" Width="135" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnDosingManualOnOFF}" Command="{Binding Path=DataContext.DosingManualONOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.FlowRateTimerBased}" Width="135">
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnDosingTimeFlowrateBased}" Command="{Binding Path=DataContext.DosingTimerFlowrateBased, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.Quantity}" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="ml" Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateDosingQuantity, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateDosingQuantity, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.FlowRate}" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="ml/sec" Text="{Binding FlowRate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateDosingFlowRate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateDosingFlowRate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.SetTime}" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="sec" Text="{Binding SetTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateDosingTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateDosingTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.Setml}" Width="140">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  Text="{Binding SetAmp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateDosingAmp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateDosingAmp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.CumulativeAmpHr}" Width="135">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  materialDesign:TextFieldAssist.SuffixText="A-H" IsReadOnly="True"  Text="{Binding CumulativeAmphr, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.SetpH}" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  Text="{Binding setPH, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewFloatInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateSetPh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateSetPh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DosingID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ActualpH}" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  IsReadOnly="True"  Text="{Binding ActualpH, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <!--<GridViewColumn Header="Reset Amp Hr" Width="110" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnRectResetAmpHr}" Command="{Binding Path=DataContext.RectifierampReset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding RectifierNo}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->
                                <GridViewColumn Header="{x:Static p:Resources.ActualAmpHr}" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  materialDesign:TextFieldAssist.SuffixText="A-H" IsReadOnly="True"  Text="{Binding ActualAmp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.RemainingTime}" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox  materialDesign:TextFieldAssist.SuffixText="sec" IsReadOnly="True"  Text="{Binding RemainingTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">

                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ONOFF}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnDosingOP}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>

            
            <!--<TabItem Header="Mech. Agitation And Spray Pump">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="400*" />
                        <RowDefinition Height="400*" />
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewTopSprayPump" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding TopSprayData,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}" Width="360">

                                </GridViewColumn>
                                <GridViewColumn Header="Auto/Manual" Width="180"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnTopSprayAutoMan}" Command="{Binding Path=DataContext.TopSprayAutoManual, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TopSprayID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="ON/OFF" Width="180"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnTopSprayManualOnOFF}" Command="{Binding Path=DataContext.TopSprayManualOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TopSprayID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                 <GridViewColumn Header="Service On/Off" Width="120" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100"  Height="50" Style="{StaticResource BtnTopSprayServiceOnOFF}" Command="{Binding Path=DataContext.TopSprayServiceOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TopSprayID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn> 
                                <GridViewColumn Header="Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnTopSprayOnOFFStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Trip Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnTopSprayTripStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewAgitation" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="1" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding AgitationData,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}" Width="360">

                                </GridViewColumn>
                                <GridViewColumn Header="Auto/Manual" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnAgitationAutoMan}" Command="{Binding Path=DataContext.MechAgitationAutoMan, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding AgitationID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="ON/OFF" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnAgitationManualOnOFF}" Command="{Binding Path=DataContext.MechAgitationManualOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding AgitationID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Service On/Off" Width="120" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100"  Height="50" Style="{StaticResource BtnAgitationServiceOnOFF}" Command="{Binding Path=DataContext.MechAgitationServiceOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding AgitationID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn> 
                                <GridViewColumn Header="Home Proxy" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnAgitationHomeProxy}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnAgitationOnOffStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Trip Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnAgitationTripStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
            </TabItem>-->

            <!--3-->
            <TabItem Header="{x:Static p:Resources.FilterPumpOilSkimmer}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500*" />
                        <ColumnDefinition Width="500*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="800*" />
                    </Grid.RowDefinitions>
                    
                    <ListView Name="LstViewFilterPump" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding FilterPumpData,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.FilterPumpName}" DisplayMemberBinding="{Binding ParameterName}"  >

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.ONOFF}" Width="130"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="45" Style="{StaticResource BtnTopSprayManualOnOFF}" Command="{Binding Path=DataContext.FilterPumpOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding PumpOnOffID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.Status}" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="45"  Style="{StaticResource BtnTopSprayOnOFFStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.TripStatus}" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="45"  Style="{StaticResource BtnTopSprayTripStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <ListView Name="LstViewOilSkimmer" Grid.Column="1"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding BaseOilSkimmerrIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.OilSkimmerName}" DisplayMemberBinding="{Binding OilSkimmerMotorName}" >

                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.AutoManualStatus}" Width="160" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="45" Style="{StaticResource BtnOilSkimmerMotorOnOFF}" Command="{Binding Path=DataContext.OilSkimmerONOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding OilSkimmerMotorID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.TripStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="45" Style="{StaticResource BtnBaseOilSkimmerTrip}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="{x:Static p:Resources.MotorStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="45" Style="{StaticResource BtnBaseOilSkimmerStatus}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
             </TabItem>
          
            <!--<TabItem Header="Utilities">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="800*" />
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewUtility" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding BarrelMotorDATA,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}">

                                </GridViewColumn>
                                <GridViewColumn Header="ON/OFF" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="50" Style="{StaticResource BtnUtilityManualOnOFF}" Command="{Binding Path=DataContext.UtilityManualOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding UtilityOnOffID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnUtilityOnOFFStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                 <GridViewColumn Header="Trip Status" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Width="50" Height="50"  Style="{StaticResource BtnUtilityTripStatus}"></Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn> 
                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
            </TabItem>-->

            <!--4-->
            <TabItem Header="{x:Static p:Resources.TankTrayBypass}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="600*" />
                        <ColumnDefinition Width="600*" /> 
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="600*" />
                        <RowDefinition Height="600*" />
                        <RowDefinition Height="250*" />
                    </Grid.RowDefinitions>
                    <ListView Name="LstViewTankBypass" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding TankBypassInputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.TankName}" DisplayMemberBinding="{Binding TankName}" >

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.BypassONOFF}" Width="170"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="40" Style="{StaticResource BtnTankBypassOnOFF}" Command="{Binding Path=DataContext.TankBypassOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TankBypassID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                              
                            </GridView>
                        </ListView.View>
                    </ListView>
                   
                    <ListView Name="LstViewTrayBypass" Grid.Column="1"  Grid.Row="0"   VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding TrayBypassInputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.TrayName}" DisplayMemberBinding="{Binding TankName}"  >

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.BypassONOFF}" Width="170"   >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="40" Style="{StaticResource BtnTrayBypassOnOFF}" Command="{Binding Path=DataContext.TrayBypassOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TankBypassID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                    <ListView Name="LstViewDryerBypass" Grid.Column="1"  Grid.Row="1"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding BarrelBypassInputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.DryerName}" DisplayMemberBinding="{Binding TankName}" Width="200">

                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static p:Resources.BypassONOFF}" Width="170"   >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="40" Style="{StaticResource BtnBarrelBypassOnOFF}" Command="{Binding Path=DataContext.BarrelBypassOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TankBypassID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <Grid Grid.Row="2" Grid.Column="1" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="600*" />
                            <ColumnDefinition Width="600*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="600*" /> 
                        </Grid.RowDefinitions>

                        <Label  Margin="5"  Grid.Row="0" Grid.Column="0" HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.NitricStationSelection}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Right"  VerticalAlignment="Center"  ></Label>
                        <Button  Margin="5"   Width="100" Height="50" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"  Style="{StaticResource BtnNitricStationSelection}" Command="{Binding NitricStationSelectionOnOFF}">
                    </Button>
                    </Grid>

                    <Border Grid.Row="1" Grid.Column="0" BorderThickness="1" Grid.RowSpan="2" BorderBrush="DarkGray" Margin="70" VerticalAlignment="Bottom">
                    <Grid   Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="200*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100*" />
                                <RowDefinition Height="100*" />
                                <RowDefinition Height="100*" />
                            </Grid.RowDefinitions>
                            <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.StationSelection}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Right"  VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" ></Label>

                            <!--<Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding SetCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="20" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="3"  ></Label>-->
                            <TextBox  Height="30" Width="70" HorizontalContentAlignment="Center" Foreground="#5A0502" FontSize="15" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Text="{Binding StationSelection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                <!--<TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding WriteStationSelectionValue}" />
                                </TextBox.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding WriteStationSelectionValue}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->


                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding WriteStationSelectionValue}" />
                                </TextBox.InputBindings>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding RefreshStationSet}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding WriteStationSelectionValue}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <Button Width="100" Height="50" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2"  Style="{StaticResource BtnStationSelection}" Command="{Binding Path=DataContext.StationSelectionOnOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TankBypassID}">
                            </Button>
                            <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.Stationtobeoperated}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Right"  VerticalAlignment="Top" Grid.Row="1" Grid.Column="0" ></Label>

                            <!--<Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding SetCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="20" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="3"  ></Label>-->
                            <TextBox  Height="30" Width="70"   HorizontalContentAlignment="Center" Foreground="#5A0502" FontSize="15" HorizontalAlignment="Center"  VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Text="{Binding StationToBeOperated, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                            </TextBox>

                        </Grid>
                    </Border>
                </Grid>
            </TabItem>

            <!--5-->
            <TabItem Header="{x:Static p:Resources.BaseBarrelMotor}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                   
                    <ListView Name="LstViewBaseBarrelMotor" Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding BaseBarrelMotorIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.BaseBarrelMotor}" DisplayMemberBinding="{Binding BaseBarrelMotorName}"  >

                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ONOFF}" Width="130" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorOnOFF}" Command="{Binding Path=DataContext.BaseBarrelMotorONOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding BaseBarrelMotorID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.TripStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorTrip}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="{x:Static p:Resources.MotorStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorStatus}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <ListView Name="LstViewBaseBarrelMotor2" Grid.Column="1"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding BaseBarrelMotorIntputs2,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.BaseBarrelMotor}" DisplayMemberBinding="{Binding BaseBarrelMotorName}" >

                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.ONOFF}" Width="130" >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorOnOFF}" Command="{Binding Path=DataContext.BaseBarrelMotorONOFF, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding BaseBarrelMotorID}">
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="{x:Static p:Resources.TripStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorTrip}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="{x:Static p:Resources.MotorStatus}" Width="120"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button Width="100" Height="35" Style="{StaticResource BtnBaseBarrelMotorStatus}" >
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
            </TabItem>
 
            <!--<TabItem Header="Out of Range">
                <Grid >

                    <dragablz:TabablzControl Background="#EBFFFD" >
                        <TabItem Header="pH" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1000*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="600*" />
                                </Grid.RowDefinitions>
                                <ListView  Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding pHCollection,UpdateSourceTrigger=PropertyChanged}" >
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment"  Value="Center" />
                                            <Setter Property="Foreground"  Value="Black" />
                                            <Setter Property="FontSize"  Value="16" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView >
                                            <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}">

                                            </GridViewColumn>
                                            <GridViewColumn Header="Low SP" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding LowSPpH , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="pH" PreviewTextInput="TextBox_PreviewTextInputFloat">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateLowpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StoppH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateLowpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding pHID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="High SP" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding HighSPpH , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="pH" PreviewTextInput="TextBox_PreviewTextInputFloat">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateHighpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StoppH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateHighpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding pHID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Average" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding AvgpH , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="pH" PreviewTextInput="TextBox_PreviewTextInputFloat">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateavgpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StoppH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateavgpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding pHID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Timer" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding DelaypH , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateTimerpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StoppH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateTimerpH, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding pHID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Low SP Bypass" Width="120"  >
                                                <GridViewColumn.CellTemplate >
                                                    <DataTemplate>
                                                        <Button Width="100" Height="50" Style="{StaticResource btnLowSPBypass}" Command="{Binding Path=DataContext.pHLowBypass, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}">
                                                        </Button>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="High SP Bypass" Width="120"  >
                                                <GridViewColumn.CellTemplate >
                                                    <DataTemplate>
                                                        <Button Width="100" Height="50" Style="{StaticResource btnHighSPBypass}" Command="{Binding Path=DataContext.pHHighBypass, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding pHID}">
                                                        </Button>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Temperature" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1000*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="600*" />
                                </Grid.RowDefinitions>
                                <ListView  Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="0"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding TempCollection,UpdateSourceTrigger=PropertyChanged}" >
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment"  Value="Center" />
                                            <Setter Property="Foreground"  Value="Black" />
                                            <Setter Property="FontSize"  Value="16" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView >
                                            <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}">

                                            </GridViewColumn>
                                            <GridViewColumn Header="Low SP" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding LowSPTemp , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="°C" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateLowTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateLowTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding TempID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="High SP" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding HighSPTemp , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="°C" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateHightemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateHightemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding TempID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Set Point" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding SetPointTemp , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="°C" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateSettemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateSettemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding TempID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Average" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding AvgTemp , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="°C" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateAvgtemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateAvgtemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding TempID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Timer" Width="120">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox  Text="{Binding DelayTemp , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateTimertemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}"/>
                                                            </TextBox.InputBindings>
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="GotFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="LostFocus">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateTimertemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  CommandParameter="{Binding TempID}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Low SP Bypass" Width="120"  >
                                                <GridViewColumn.CellTemplate >
                                                    <DataTemplate>
                                                        <Button Width="100" Height="50" Style="{StaticResource btnLowSPBypassTemp}" Command="{Binding Path=DataContext.UpdateLowSpBypasstemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}">
                                                        </Button>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="High SP Bypass" Width="120"  >
                                                <GridViewColumn.CellTemplate >
                                                    <DataTemplate>
                                                        <Button Width="100" Height="50" Style="{StaticResource btnHighSPBypassTemp}" Command="{Binding Path=DataContext.UpdateHighSpBypasstemp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding TempID}">
                                                        </Button>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Dip Time">
                            <syncfusion:TabNavigationControl x:Name="tabNavigation"  Margin="15">
                                <syncfusion:TabNavigationItem Header="New">

                                    <syncfusion:TabNavigationItem.Content>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1000*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="100" />
                                                <RowDefinition Height="600*" />
                                            </Grid.RowDefinitions>
                                            <Grid  Grid.Row="0" Grid.Column="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                </Grid.ColumnDefinitions>
                                                <Label VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  Content="Program Name" FontSize="12" FontFamily="bold" FontStyle="Normal"  Grid.Column="0"></Label>
                                                <TextBox VerticalAlignment="Center"  Text="{Binding ProgramNameText,UpdateSourceTrigger=PropertyChanged}"   Grid.Column="1"></TextBox>
                                                <Button Content="New" Command="{Binding NewProgramName}"  Grid.Column="2" Margin="10"></Button>
                                                <Button Content="Save" Command="{Binding SaveProgramName}"  Grid.Column="3" Margin="10"></Button>
                                            </Grid>
                                            <ListView  Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="1"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding DipTimeCollectionNew,UpdateSourceTrigger=PropertyChanged}" >
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                        <Setter Property="VerticalContentAlignment"  Value="Center" />
                                                        <Setter Property="Foreground"  Value="Black" />
                                                        <Setter Property="FontSize"  Value="16" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.View>
                                                    <GridView >
                                                        <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}">

                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Low SP" Width="120">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox  Text="{Binding LowSPDipTime , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">

                                                                    </TextBox>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="High SP" Width="120">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox  Text="{Binding HighSPDipTime , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">

                                                                    </TextBox>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Low SP Bypass" Width="120"  >
                                                            <GridViewColumn.CellTemplate >
                                                                <DataTemplate>
                                                                    <Button Width="100" Height="50" Style="{StaticResource btnLowSPBypassDipTimeEdit}" Command="{Binding Path=DataContext.DipTimeLowBypass, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DipTimeID}">
                                                                    </Button>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="High SP Bypass" Width="120"  >
                                                            <GridViewColumn.CellTemplate >
                                                                <DataTemplate>
                                                                    <Button Width="100" Height="50" Style="{StaticResource btnHighSPBypassDipTimeEdit}" Command="{Binding Path=DataContext.DipTimeHighBypass, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DipTimeID}">
                                                                    </Button>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView           >
                                        </Grid>
                                    </syncfusion:TabNavigationItem.Content>
                                </syncfusion:TabNavigationItem>
                                <syncfusion:TabNavigationItem Header="Edit">

                                    <syncfusion:TabNavigationItem.Content>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1000*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="100" />
                                                <RowDefinition Height="600*" />
                                            </Grid.RowDefinitions>
                                            <Grid  Grid.Row="0" Grid.Column="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                    <ColumnDefinition Width="100*" />
                                                </Grid.ColumnDefinitions>
                                                <Label VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  Content="Program Name" FontSize="12" FontFamily="bold" FontStyle="Normal"  Grid.Column="0"></Label>
                                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Path=ComboProgramName}"  DisplayMemberPath="ProgramNo" SelectedValuePath="ProgramNo" SelectedValue="{Binding Path=selectedprogramNo}"  Grid.Column="1"></ComboBox>
                                                <Button Content="Delete" Command="{Binding DeleteDipTime}"  Grid.Column="3" Margin="10"></Button>
                                            </Grid>
                                            <ListView  Grid.Column="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Row="1"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding DipTimeCollectionEdit,UpdateSourceTrigger=PropertyChanged}" >
                                                <ListView.ItemContainerStyle>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                        <Setter Property="VerticalContentAlignment"  Value="Center" />
                                                        <Setter Property="Foreground"  Value="Black" />
                                                        <Setter Property="FontSize"  Value="16" />
                                                    </Style>
                                                </ListView.ItemContainerStyle>
                                                <ListView.View>
                                                    <GridView >
                                                        <GridViewColumn Header="Station Name" DisplayMemberBinding="{Binding ParameterName}">

                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Low SP" Width="120">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox  Text="{Binding LowSPDipTime , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">

                                                                    </TextBox>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="High SP" Width="120">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <TextBox  Text="{Binding HighSPDipTime , UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  materialDesign:TextFieldAssist.SuffixText="sec" PreviewTextInput="TextBox_PreviewTextInput">

                                                                    </TextBox>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Low SP Bypass" Width="120"  >
                                                            <GridViewColumn.CellTemplate >
                                                                <DataTemplate>
                                                                    <Button Width="100" Height="50" Style="{StaticResource btnLowSPBypassDipTime}" Command="{Binding Path=DataContext.DipTimeLowBypassEdit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DipTimeID}">
                                                                    </Button>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="High SP Bypass" Width="120"  >
                                                            <GridViewColumn.CellTemplate >
                                                                <DataTemplate>
                                                                    <Button Width="100" Height="50" Style="{StaticResource btnHighSPBypassDipTime}" Command="{Binding Path=DataContext.DipTimeHighBypassEdit, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DipTimeID}">
                                                                    </Button>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header="Edit" Width="120"  >
                                                            <GridViewColumn.CellTemplate >
                                                                <DataTemplate>
                                                                    <Button Width="100" Height="50" Content="Edit"  Command="{Binding Path=DataContext.EditDipTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding DipTimeID}">
                                                                    </Button>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView           >
                                        </Grid>
                                    </syncfusion:TabNavigationItem.Content>
                                </syncfusion:TabNavigationItem>
                            </syncfusion:TabNavigationControl>
                        </TabItem>
                    </dragablz:TabablzControl>

                </Grid>
            </TabItem>-->

            <!--6-->
            <TabItem Header="{x:Static p:Resources.WCS}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                        <ColumnDefinition Width="550*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="550*" />
                    </Grid.RowDefinitions>


                    <ListView Name="LstViewWagon1WCS" Grid.Column="0"  Grid.Row="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding WagonIntputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >

                                <GridViewColumn Header="{x:Static p:Resources.Wagon1WCS}" DisplayMemberBinding="{Binding ParameterName}"   />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon1WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon1WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewWagon2WCS"  Grid.Column="1"  Grid.Row="0"   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"   HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon2Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >

                                <GridViewColumn Header="{x:Static p:Resources.Wagon2WCS}" DisplayMemberBinding="{Binding ParameterName}"   />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon2WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon2WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewWagon3WCS" Grid.Column="2"  Grid.Row="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon3Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >

                                <GridViewColumn Header="{x:Static p:Resources.Wagon3WCS}" DisplayMemberBinding="{Binding ParameterName}"  />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon3WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon3WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewWagon4WCS"  Grid.Column="3"  Grid.Row="0"   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon4Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >

                                <GridViewColumn Header="{x:Static p:Resources.Wagon4WCS}" DisplayMemberBinding="{Binding ParameterName}"  />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon4WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon4WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewWagon5WCS" Grid.Column="4"  Grid.Row="0"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon5Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >

                                <GridViewColumn Header="{x:Static p:Resources.Wagon5WCS}" DisplayMemberBinding="{Binding ParameterName}" />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon5WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon5WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Name="LstViewWagon6WCS"  Grid.Column="5"  Grid.Row="0"   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon6Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.Wagon6WCS}" DisplayMemberBinding="{Binding ParameterName}"  Width="130" />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon6WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon6WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <ListView Name="LstViewWagon7WCS"  Grid.Column="6"  Grid.Row="0"   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="20 20 20 20" ItemsSource="{Binding Wagon7Intputs,UpdateSourceTrigger=PropertyChanged}" >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment"  Value="Center" />
                                <Setter Property="Foreground"  Value="Black" />
                                <Setter Property="FontSize"  Value="16" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="{x:Static p:Resources.Wagon7WCS}" DisplayMemberBinding="{Binding ParameterName}"  Width="130" />
                                <GridViewColumn Header="{x:Static p:Resources.Value}" Width="80"  >
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox   Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateWagon7WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopTempRefresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateWagon7WCSSP, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ID}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>

        </dragablz:TabablzControl>
    </Grid>
</syncfusion:ChromelessWindow>

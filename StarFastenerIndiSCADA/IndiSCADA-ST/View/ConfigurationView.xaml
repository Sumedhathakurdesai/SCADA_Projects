<syncfusion:ChromelessWindow x:Class="IndiSCADA_ST.View.ConfigurationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IndiSCADA_ST.View"
        mc:Ignorable="d"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:Viewmodel="clr-namespace:IndiSCADA_ST.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox" 
        xmlns:p = "clr-namespace:IndiSCADA_ST.Properties"
        TextElement.Foreground="WhiteSmoke"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="20"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="Humanst521 Lt Bt"
        Title="{x:Static p:Resources.Configuration}"  Background="#FFFFFFFF" TitleBarHeight="40" TitleFontSize="17" WindowStyle="None" ResizeMode="NoResize"  TitleBarForeground="White" TitleBarBackground="#00786B"  Topmost="false" WindowStartupLocation="CenterScreen" WindowState="Maximized" >
    <Window.Resources>
        <Style BasedOn="{StaticResource MaterialDesignTextBox}"
           TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Black" />
        </Style> 
    </Window.Resources>
    <Window.DataContext>
        <Viewmodel:ConfigurationViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding  Exit}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <dragablz:TabablzControl Background="#EBFFFD"  >
            <TabItem Header="{x:Static p:Resources.TagList}">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*" />
                        <RowDefinition Height="600*" />
                    </Grid.RowDefinitions>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.TestConnection}">
                <Grid >
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#41A175" Offset="0"/>
                            <GradientStop Color="Black" Offset="2"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300*" />
                        <ColumnDefinition Width="300*" />
                        <ColumnDefinition Width="400*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50*" />
                        <RowDefinition Height="50*" />
                        <RowDefinition Height="200*" />
                    </Grid.RowDefinitions>

                    <ListBox 
                        x:Name="TempItemsListBox" 
                        Margin="8 16 0 16"
                        BorderBrush="White" BorderThickness="1"                              
                        ToolTip="Click to read the tag values"
                        Grid.Column="0" Grid.RowSpan="3" Grid.Row="0"        
                        Foreground="White"
                        ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                        SelectedItem="{Binding SelectedTagToDisplay, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding AllTagsList, UpdateSourceTrigger=PropertyChanged}" >

                        <ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ListBox.Resources>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TagSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!--<ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding ItemName}" Margin="32 0 32 0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>-->
                    </ListBox>
                    <WrapPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Vertical" Grid.RowSpan="3" >
                        <Label Foreground="White" Content="Values for selected Tag" VerticalAlignment="Bottom" ></Label>
                        <ListBox                         
                        Margin="8 16 0 16"
                        Foreground="White"
                        BorderBrush="White" BorderThickness="1" Width="300" Height="400"
                        SelectedIndex="0"                                                
                        ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"                      
                        ItemsSource="{Binding SelectedTagValues, UpdateSourceTrigger=PropertyChanged}" >

                            <!--<ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ListBox.Resources>-->

                            <!--<ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding ItemName}" Margin="32 0 32 0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>-->
                        </ListBox>
                    </WrapPanel>
                    <Border BorderBrush="White" BorderThickness="1" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Margin="12 12 12 12">
                        <WrapPanel Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Label Foreground="White" Content="Write Tag-Value Test" VerticalAlignment="Bottom" ></Label>
                            <TextBox Width="250" BorderThickness="1" Foreground="White" Grid.Column="2" Grid.Row="0" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Tag Address" Text="{Binding TagAddresstoWrite, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"></TextBox>
                            <TextBox BorderThickness="1" Foreground="White" Grid.Column="2" Grid.Row="1" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Tag Value"  Text="{Binding TagValuetoWrite, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" ></TextBox>
                            <Button BorderBrush="GreenYellow" Grid.Column="2" Grid.Row="2" ToolTip="Write Tag to PLC"  Background="Transparent"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" Command="{Binding TagValueToWrite}">
                                <materialDesign:PackIcon Kind="ApplicationExport"  Height="60" Width="35" Foreground="#9AC7B6" />
                            </Button>
                        </WrapPanel>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.Settings}">
                <Grid >
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#41A175" Offset="0"/>
                            <GradientStop Color="Black" Offset="2"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="500*" />
                        <ColumnDefinition Width="100*" />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="1" BorderThickness="2" BorderBrush="Black">
                        <Grid Grid.Column="1" >
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#41A175" Offset="0"/>
                                    <GradientStop Color="Black" Offset="2"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="500*" />
                                <ColumnDefinition Width="500*" />


                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="200*" />
                                <RowDefinition Height="400*" />
                            </Grid.RowDefinitions>
                            <Label Foreground="Yellow" Content="{x:Static p:Resources.ShiftSettings}" VerticalAlignment="Center" Grid.ColumnSpan="3" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" ></Label>
                            <Label Foreground="White" Content="{x:Static p:Resources.NumberofShifts}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" ></Label>
                            <ComboBox  materialDesign:HintAssist.Foreground="GreenYellow" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" Grid.Row="1" Grid.Column="1" Text="{Binding NoOfShift, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0" Width="150" VerticalContentAlignment="Bottom" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintComboBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.NumberofShifts}" Height="50" TabIndex="0" HorizontalAlignment="Left" >
                                <ComboBoxItem Content="1" />
                                <ComboBoxItem Content="2" />
                                <ComboBoxItem Content="3" />
                                <ComboBoxItem Content="Custom" />
                            </ComboBox>

                            <Label Content="{x:Static p:Resources.ShiftNumber}"  VerticalAlignment="Center" Foreground="WhiteSmoke"  Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right"></Label>
                            <TextBox  Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow"  VerticalAlignment="Center" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" x:Name="txtShiftNumber"  Text="{Binding ShiftEntity.ShiftNumber, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0"  Width="150" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.ShiftNumber}" Grid.Row="2" Grid.Column="1" TabIndex="1" HorizontalAlignment="Left" Height="50" ></TextBox>

                            <Label Content="{x:Static p:Resources.ShiftHours}"  VerticalAlignment="Center" Foreground="WhiteSmoke" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"></Label>
                            <TextBox Foreground="White"  materialDesign:HintAssist.Foreground="GreenYellow"  VerticalAlignment="Center" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" x:Name="txthours"  Text="{Binding ShiftHours, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0"  Width="150" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.ShiftHours}" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" TabIndex="2" Height="50" ></TextBox>

                            <!--<Label Foreground="Yellow" Content="Shift Time Interval Setting"  VerticalAlignment="Bottom" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" ></Label>-->
                            <Label Content="{x:Static p:Resources.ShiftStartTimes}"  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="WhiteSmoke" Grid.Row="4" Grid.Column="0"></Label>
                            <syncfusion:TimeSpanEdit Format="hh:mm:ss" Width="150"  VerticalAlignment="Center" Height="50"  Margin="25,0,0,0" Value="{Binding ShiftEntity.ShiftStartTime,Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" TabIndex="3">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding FirstShiftTimeChangeCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </syncfusion:TimeSpanEdit>
                            <Label Content="{x:Static p:Resources.ShiftEndTime}"  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="WhiteSmoke" Grid.Row="5" Grid.Column="0"></Label>
                            <TextBox Width="150" Height="50" BorderThickness="1"  VerticalAlignment="Center" Grid.Row="5" Grid.Column="1" Margin="25,0,0,0" Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow"  materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke"  HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="" Text="{Binding ShiftEntity.ShiftEndTime, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  HorizontalAlignment="Left" TabIndex="4" ></TextBox>
                            <!--<Label Content="Third Shift Time "  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="WhiteSmoke" Grid.Row="6" Grid.Column="0"></Label>
                        <TextBox BorderThickness="1" Foreground="White" Grid.Column="1" Grid.Row="6" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint=""  Text="{Binding ThirdShiftTime, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" HorizontalAlignment="Left" ></TextBox>-->
                            <!--<Button BorderBrush="GreenYellow" Grid.Column="2" Grid.Row="2" ToolTip="Write Tag to PLC"  Background="Transparent"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" Command="{Binding TagValueToWrite}">
                         <materialDesign:PackIcon Kind="ContentSaveAlertOutline"  Height="60" Width="35" Foreground="#9AC7B6" />                            
                        </Button>-->
                            <materialDesign:Badged BadgeBackground="WhiteSmoke" BadgeForeground="Red" Margin="25,0,0,0" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"   BadgeColorZoneMode="Standard"  Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" TabIndex="5" >
                                <Button   BorderBrush="GreenYellow"  Command="{Binding SetShiftTimingCommand}"  HorizontalAlignment="Center" Width="300"  Grid.Row="6" Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 20 0 20 " Content="{x:Static p:Resources.NumberOfShiftsSetShiftTimings}"/>
                            </materialDesign:Badged>
                            <!--<materialDesign:Badged BadgeBackground="WhiteSmoke" BadgeForeground="Red" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"  Margin="25,0,0,0" BadgeColorZoneMode="Standard"  Grid.Row="6" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" >
                                <Button   BorderBrush="GreenYellow"  Command="{Binding ClearShiftTimingCommand}"  HorizontalAlignment="Center" Width="300"  Grid.Row="6" Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 20 0 20 " Content="Clear Shift Data"/>
                            </materialDesign:Badged>-->
                            <Border BorderThickness="2" BorderBrush="Black" Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="2">
                                <syncfusion:SfDataGrid  AutoGenerateColumns="False" Background="LightYellow" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" SelectedItem="{Binding SelectedShiftData}"   ItemsSource="{Binding ShiftTimeData,UpdateSourceTrigger=PropertyChanged}" Margin="5" BorderBrush="Teal">
                                    <syncfusion:SfDataGrid.Columns>
                                        <syncfusion:GridTextColumn MappingName="ShiftNumber"  HeaderText="{x:Static p:Resources.ShiftNumber}" ColumnSizer="SizeToHeader">
                                            <syncfusion:GridTextColumn.CellStyle>
                                                <Style TargetType="syncfusion:GridCell">
                                                    <Setter Property="BorderBrush" Value="Teal"/>
                                                </Style>
                                            </syncfusion:GridTextColumn.CellStyle>
                                        </syncfusion:GridTextColumn>
                                        <syncfusion:GridTextColumn MappingName="ShiftStartTime"  HeaderText="{x:Static p:Resources.ShiftStartTime}">
                                            <syncfusion:GridTextColumn.CellStyle>
                                                <Style TargetType="syncfusion:GridCell">
                                                    <Setter Property="BorderBrush" Value="Teal"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataType}" Value="1">
                                                            <Setter Property="Background" Value="Lime"/>
                                                            <Setter Property="Foreground" Value="Lime"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataType}" Value="0">
                                                            <Setter Property="Background" Value="LightGray"/>
                                                            <Setter Property="Foreground" Value="LightGray"/>

                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </syncfusion:GridTextColumn.CellStyle>
                                        </syncfusion:GridTextColumn>
                                        <syncfusion:GridTextColumn MappingName="ShiftEndTime"  HeaderText="{x:Static p:Resources.ShiftEndTime}">
                                            <syncfusion:GridTextColumn.CellStyle>
                                                <Style TargetType="syncfusion:GridCell">
                                                    <Setter Property="BorderBrush" Value="Teal"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Unit}" Value="1">
                                                            <Setter Property="Background" Value="Lime"/>
                                                            <Setter Property="Foreground" Value="Lime"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Unit}" Value="0">
                                                            <Setter Property="Background" Value="LightGray"/>
                                                            <Setter Property="Foreground" Value="LightGray"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </syncfusion:GridTextColumn.CellStyle>
                                        </syncfusion:GridTextColumn>

                                    </syncfusion:SfDataGrid.Columns>
                                </syncfusion:SfDataGrid>
                            </Border>

                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
             <TabItem Header="{x:Static p:Resources.NextLoadSettings}">
                <ScrollViewer>
                    <Grid >
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#41A175" Offset="0"/>
                                <GradientStop Color="Black" Offset="2"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200*" />
                            <ColumnDefinition Width="800*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1000*" />
                            <RowDefinition Height="200*" />
                        </Grid.RowDefinitions>
                        <!--Text box parameter grid-->
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />

                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Foreground="Black" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.ParameterName}" Grid.Column="0" Grid.Row="0" Text="{Binding NextloadSetting.ParameterName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"></TextBox>
                            <TextBox Foreground="Black" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.Unit}" Grid.Column="0" Grid.Row="1" Text="{Binding NextloadSetting.Unit, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" ></TextBox>
                            <ComboBox Foreground="Black" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"  Height="50" VerticalContentAlignment="Bottom" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" materialDesign:HintAssist.Hint="{x:Static p:Resources.DataType}" Grid.Column="0" Grid.Row="2" Text="{Binding NextloadSetting.DataType, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" >
                                <ComboBoxItem Content="int" />
                                <ComboBoxItem Content="varchar(50)" />
                                <ComboBoxItem Content="float" />
                                <ComboBoxItem Content="bit" />
                            </ComboBox>
                            <TextBox Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.MinimumValue}" Grid.Column="0" Grid.Row="3" Text="{Binding NextloadSetting.MinValue, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"></TextBox>
                            <TextBox Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.MaximumValue}" Grid.Column="0" Grid.Row="4" Text="{Binding NextloadSetting.MaxValue, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" ></TextBox>
                            <TextBox Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.TaskName}" Grid.Column="0" Grid.Row="5" Text="{Binding NextloadSetting.TaskName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  ></TextBox>
                            <ComboBox Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"  Height="50" VerticalContentAlignment="Bottom"  BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" materialDesign:HintAssist.Hint="{x:Static p:Resources.ScreenName}" Grid.Column="0" Grid.Row="6" Text="{Binding NextloadSetting.ScreenName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" >
                                <ComboBoxItem Content="PartMaster" />
                                <ComboBoxItem Content="NextLoad" />
                            </ComboBox>

                            <TextBox Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="{x:Static p:Resources.CalculationFormula}" Grid.Column="0" Grid.Row="7" Text="{Binding NextloadSetting.CalculationFormula, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  >
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding CalculateFormulaCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                            </TextBox>
                            <!--<Button Content="Add Formula" Name="btnFormula" Click="BtnFormula_Click" Grid.Column="0" Grid.Row="8"></Button>-->
                            <Button Content="{x:Static p:Resources.AddEditFormula}" Name="btnFormula" Command="{Binding CalculateFormulaCommand}"  CommandParameter="{Binding NextloadSetting.ParameterName }" Grid.Column="0" Grid.Row="8"></Button>
                            <CheckBox Content="{x:Static p:Resources.isPrimaryKey}" Margin="5" BorderThickness="3" BorderBrush="White" Foreground="White" Style="{StaticResource MaterialDesignAccentCheckBox}"  Grid.Column="0" Grid.Row="9" IsChecked="{Binding NextloadSetting.isPrimaryKey, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  >
                            </CheckBox>
                            <CheckBox Margin="5" Content="{x:Static p:Resources.DownloadtoPLC}" Foreground="White" Style="{StaticResource MaterialDesignAccentCheckBox}"  Grid.Column="0" Grid.Row="10" IsChecked="{Binding NextloadSetting.isDownloadToPlc, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  >

                            </CheckBox>
                            <CheckBox Margin="5" Content="{x:Static p:Resources.isReadOnlyForNextLoad}" Foreground="White" Style="{StaticResource MaterialDesignAccentCheckBox}"  Grid.Column="0" Grid.Row="11" IsChecked="{Binding NextloadSetting.isReadOnly, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" >
                      
                            </CheckBox>
                            <CheckBox Margin="5" Content="{x:Static p:Resources.isCalculationRequired}" Foreground="White" Style="{StaticResource MaterialDesignAccentCheckBox}"  Grid.Column="0" Grid.Row="12" IsChecked="{Binding NextloadSetting.isCalculationRequired, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" >
                            
                            </CheckBox>
                            <CheckBox Margin="5" Content="{x:Static p:Resources.isInReport}" Foreground="White" Style="{StaticResource MaterialDesignAccentCheckBox}"  Grid.Column="0" Grid.Row="13" IsChecked="{Binding NextloadSetting.isInReport, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" >
                      
                            </CheckBox>
                            <WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="14"  Orientation="Horizontal" Margin="0 8 0 0">
                                <Button BorderBrush="GreenYellow" ToolTip="{x:Static p:Resources.AddNewParameter}" Command="{Binding AddParameter}" Background="Transparent"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" >
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M0 0L0 100L100 100L100 0L0 0z" Fill="#FFFFFF"/>
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M40 4.46451C8.49482 10.1448 -5.80511 48.783 10.4676 75C20.924 91.8464 40.9098 98.9774 60 95.5355C91.5052 89.8552 105.805 51.217 89.5324 25C79.076 8.15361 59.0903 1.02258 40 4.46451z" Fill="#000000"/>
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M41 9.51775C35.7492 10.6377 30.4055 13.0118 26 16.0548C6.42877 29.5731 3.25297 58.9394 18.3287 76.9961C27.885 88.4421 44.4874 93.5785 59 90.4823C64.2406 89.3642 69.5569 86.8543 74 83.8951C93.761 70.7338 96.6368 40.7725 81.6744 23.0039C71.9639 11.4721 55.7059 6.3812 41 9.51775z" Fill="#FFFFFF"/>
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M48 34L48 48L34 48L34 52L48 52L48 66L52 66L52 52L66 52L66 48L52 48L52 34L48 34z" Fill="#000000"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>

                                <Button BorderBrush="GreenYellow" ToolTip="{x:Static p:Resources.SaveParameter}" Command="{Binding SaveParameter}" Background="Transparent"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" >
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="F1 M 26.9167,39.5833L 31.6667,39.5833L 31.6667,47.5L 39.5833,47.5L 39.5833,52.25L 31.6667,52.25L 31.6667,60.1667L 26.9167,60.1667L 26.9167,52.25L 19,52.25L 19,47.5L 26.9167,47.5L 26.9167,39.5833 Z M 38,26.9167C 42.618,26.9167 44.5972,29.5555 43.9312,35.0945C 44.5262,35.4358 44.9271,36.0773 44.9271,36.8125C 44.9271,37.7121 44.3269,38.4715 43.5051,38.7122C 43.1618,39.9359 42.6286,41.0191 41.9583,41.8856L 41.9583,46.0486C 44.1574,46.4884 45.9167,46.7083 48.5555,48.0278C 51.1944,49.3472 52.0741,50.5567 53.8333,52.316L 53.8333,58.5833L 33.25,58.5833L 33.25,53.8333L 41.1667,53.8333L 41.1667,45.9167L 34.0416,45.9167L 34.0417,41.8856L 33.25,40.6397L 33.25,38L 31.4686,38C 31.2201,37.6692 31.0729,37.2581 31.0729,36.8125C 31.0729,36.0773 31.4737,35.4358 32.0688,35.0945C 31.4028,29.5555 33.3819,26.9167 38,26.9167 Z M 22.1666,58.5833L 22.1666,53.8333L 25.3333,53.8333L 25.3333,58.5833L 22.1666,58.5833 Z M 12.6667,49.0833L 12.6667,42.816C 14.4259,41.0567 15.3056,39.8472 17.9444,38.5278C 20.5833,37.2084 22.3426,36.9885 24.5417,36.5486L 24.5417,32.3856C 23.8714,31.5191 23.3382,30.4359 22.9949,29.2122C 22.1731,28.9715 21.5729,28.2121 21.5729,27.3125C 21.5729,26.5774 21.9738,25.9358 22.5688,25.5945C 21.9028,20.0556 23.8819,17.4167 28.5,17.4167C 32.8315,17.4167 34.8414,20.9258 34.5246,25.7844C 31.6667,26.9167 30.0833,28.5 30.0896,33.1153C 29.4946,33.4566 29.0937,34.0982 29.0937,34.8334C 29.0937,35.733 29.2981,36.8882 30.1199,37.1288L 30.405,38L 25.3333,38L 25.3333,45.9167L 17.4167,45.9167L 17.4167,49.0834L 12.6667,49.0833 Z M 50.1389,46.8403C 47.5,45.5208 46.5324,45.3009 44.3333,44.8611L 44.3333,40.3023C 45.0036,39.4358 45.5368,38.3525 45.8801,37.1288C 46.7019,36.8882 46.9062,35.7329 46.9062,34.8333C 46.9062,34.0982 46.5054,33.4566 45.9103,33.1153C 45.9167,28.5 44.3333,26.9167 41.4754,25.7844C 41.1585,20.9258 43.1685,17.4167 47.5,17.4167C 52.118,17.4167 54.0972,20.0556 53.4312,25.5945C 54.0262,25.9358 54.4271,26.5773 54.4271,27.3125C 54.4271,28.2121 53.8268,28.9715 53.005,29.2122C 52.6617,30.4359 52.1286,31.5191 51.4583,32.3856L 51.4583,36.5486C 53.6574,36.9884 55.4166,37.2083 58.0555,38.5278C 60.6944,39.8472 61.5741,41.0567 63.3333,42.816L 63.3333,49.0833L 53.3906,49.0833C 52.1176,47.7648 52.3265,47.9341 50.1389,46.8403 Z " Fill="WhiteSmoke"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>

                                <Button BorderBrush="GreenYellow" ToolTip="{x:Static p:Resources.EditParameter}" Background="Transparent" Command="{Binding UpdateParameter}"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" >
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="F1 M 53.2929,21.2929L 54.7071,22.7071C 56.4645,24.4645 56.4645,27.3137 54.7071,29.0711L 52.2323,31.5459L 44.4541,23.7677L 46.9289,21.2929C 48.6863,19.5355 51.5355,19.5355 53.2929,21.2929 Z M 31.7262,52.052L 23.948,44.2738L 43.0399,25.182L 50.818,32.9601L 31.7262,52.052 Z M 23.2409,47.1023L 28.8977,52.7591L 21.0463,54.9537L 23.2409,47.1023 Z M 17,28L 17,23L 23,23L 23,17L 28,17L 28,23L 34,23L 34,28L 28,28L 28,34L 23,34L 23,28L 17,28 Z " Fill="WhiteSmoke"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                                <Button BorderBrush="GreenYellow" ToolTip="{x:Static p:Resources.DeleteParameter}" Background="Transparent" Command="{Binding DeleteParameter}"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" >
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <!--<Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M0 0L0 100L100 100L100 0L0 0z" Fill="#ffffff"/>-->
                                            <!--<Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M18 12L12 18C17.9107 26.1197 25.9122 32.906 33 40C35.4405 42.4426 40.7006 46.1583 40.7006 50C40.7006 57.2384 23.8735 69.0582 19.0044 74C16.4308 76.6119 11.2789 80.7825 14.5135 84.7423C18.3155 89.3965 23.1948 83.7596 26 80.9956C30.9418 76.1265 42.7616 59.2994 50 59.2994C55.4256 59.2994 62.4585 69.4585 66 73L73 79.9991C75.7185 82.7027 90.9459 90.9269 86.0667 79.9991C82.6001 72.2349 71.9602 64.9797 66.0003 59C63.6233 56.6151 58.4879 52.9175 59.4347 49C61.3426 41.1058 75.3839 31.6955 80.9956 26C83.5131 23.445 88.748 19.2158 85.4865 15.3394C81.66 10.7915 76.8144 16.2381 74 19.005C69.0487 23.8727 57.2451 40.7006 50 40.7006C46.1583 40.7006 42.4426 35.4405 40 33C32.906 25.9122 26.1196 17.9107 18 12z" Fill="#010101"/>-->
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M35 18.562C31.8422 19.2921 29.181 22.8309 27 25.0009C24.3311 27.6564 18.4347 31.8176 18.4347 36C18.4347 39.8812 23.5358 43.5314 26.0001 46L48 68C50.858 70.8581 58.7017 76.298 57.5653 81C53.4416 98.0624 22.5262 105.855 18.562 123C17.1782 128.985 33.2718 144.062 39 140.486C50.1189 133.547 59.7337 120.265 69 111C71.7063 108.294 76.5346 101.355 81 102.435C91.1866 104.897 104.621 124.622 112 132C114.904 134.904 120.218 142.544 125 141.438C128.158 140.708 130.819 137.169 133 134.999C135.669 132.344 141.565 128.182 141.565 124C141.565 120.119 136.464 116.469 134 114L112 92C109.142 89.1419 101.298 83.702 102.435 79C106.558 61.9376 137.474 54.1451 141.438 37C142.822 31.0149 126.728 15.9383 121 19.5135C109.881 26.4533 100.266 39.7353 91 49C88.2936 51.7059 83.4654 58.6445 79 57.5653C68.8134 55.1034 55.3791 35.3784 48 28C45.0962 25.0965 39.7818 17.4564 35 18.562z" Fill="#010101"/>
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M35 25.562C30.8789 26.5149 23.9449 33.5221 25.9333 38C31.0682 49.5642 48.0668 61.059 57 70C59.5465 72.5487 65.5817 76.7945 64.5653 81C62.8122 88.2536 50.1776 96.8224 45 102L34 113C31.3343 115.667 25.4347 119.81 25.4347 124C25.4347 128.508 33.4806 136.074 38 134.067C49.2152 129.087 60.3352 112.663 69 104C71.7063 101.294 76.5346 94.3555 81 95.4347C91.1866 97.8966 104.621 117.622 112 125C114.904 127.903 120.218 135.544 125 134.438C129.121 133.485 136.055 126.478 134.067 122C128.932 110.436 111.933 98.941 103 90C100.453 87.4513 94.4183 83.2055 95.4347 79C97.1878 71.7464 109.822 63.1776 115 58L126 47C128.666 44.3331 134.565 40.1902 134.565 36C134.565 31.4922 126.519 23.9265 122 25.9333C110.785 30.9132 99.6648 47.3367 91 56C88.2936 58.7059 83.4654 65.6445 79 64.5653C68.8134 62.1034 55.3791 42.3784 48 35C45.0963 32.0965 39.7817 24.4563 35 25.562z" Fill="#ffffff"/>
                                            <Path Width="24.6667" Height="24.75" Canvas.Left="1.6667" Canvas.Top="1.4167" Stretch="Fill" Data="M36 30L36 34L40 34L40 30L36 30M120 30L120 34L124 34L124 30L120 30M42 36L42 40L46 40L46 36L42 36M114 36L114 40L118 40L118 36L114 36M48 42L48 46L52 46L52 42L48 42M108 42L108 46L112 46L112 42L108 42M54 48L54 52L58 52L58 48L54 48M102 48L102 52L106 52L106 48L102 48M60 54L60 58L64 58L64 54L60 54M96 54L96 58L100 58L100 54L96 54M66 60L66 64L70 64L70 60L66 60M90 60L90 64L94 64L94 60L90 60M72 66L72 70L76 70L76 66L72 66M84 66L84 70L88 70L88 66L84 66M78 72L78 76L82 76L82 72L78 72M64 86L64 90L68 90L68 86L64 86M92 86L92 90L96 90L96 86L92 86M58 92L58 96L62 96L62 92L58 92M98 92L98 96L102 96L102 92L98 92M52 98L52 102L56 102L56 98L52 98M104 98L104 102L108 102L108 98L104 98M46 104L46 108L50 108L50 104L46 104M110 104L110 108L114 108L114 104L110 104M40 110L40 114L44 114L44 110L40 110M116 110L116 114L120 114L120 110L116 110M34 116L34 120L38 120L38 116L34 116M122 116L122 120L126 120L126 116L122 116M28 122L28 126L32 126L32 122L28 122M128 122L128 126L132 126L132 122L128 122z" Fill="#010101"/>

                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </WrapPanel>
                            <materialDesign:Badged BadgeBackground="WhiteSmoke" BadgeForeground="Red" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"   BadgeColorZoneMode="Standard"  Grid.Row="15" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Button   BorderBrush="GreenYellow"  Command="{Binding CreateTableCommand}"  HorizontalAlignment="Center" Width="300"  Grid.Row="15" Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}"  CommandParameter="{Binding ElementName=LoginPaaswordBox }" Margin="0 20 0 20 " Content="{x:Static p:Resources.CreatePartMaster}"/>
                            </materialDesign:Badged>

                        </Grid>
                        <!--<DataGrid Grid.Column="1" Grid.Row="0" Margin="10">

                    </DataGrid>-->
                        <syncfusion:SfDataGrid  AutoGenerateColumns="False" Background="LightYellow" HorizontalAlignment="Center" FontSize="14" SelectedItem="{Binding NextloadSetting}"   ItemsSource="{Binding NextLoadData,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0"  Margin="5" BorderBrush="Teal">
                            <syncfusion:SfDataGrid.Columns>
                                <syncfusion:GridTextColumn MappingName="ParameterName"  HeaderText="{x:Static p:Resources.ParameterName}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="DataType"   HeaderText="{x:Static p:Resources.DataType}" >
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataType}" Value="1">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Lime"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DataType}" Value="0">
                                                    <Setter Property="Background" Value="LightGray"/>
                                                    <Setter Property="Foreground" Value="LightGray"/>

                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="Unit"   HeaderText="{x:Static p:Resources.Unit}" >
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Unit}" Value="1">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Lime"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Unit}" Value="0">
                                                    <Setter Property="Background" Value="LightGray"/>
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="MinValue"  HeaderText="{x:Static p:Resources.MinimumValue}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="MaxValue"  HeaderText="{x:Static p:Resources.MaximumValue}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isPrimaryKey"  HeaderText="{x:Static p:Resources.isPrimaryKey}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="TableName"  HeaderText="{x:Static p:Resources.TableName}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isCalculationRequired"  HeaderText="{x:Static p:Resources.isCalculationRequired}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isDownloadToPLC"  HeaderText="{x:Static p:Resources.isDownloadToPLC}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="TaskName"  HeaderText="{x:Static p:Resources.TaskName}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isReadOnlyForNextLoad"  HeaderText="{x:Static p:Resources.isReadOnlyForNextLoad}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isInLoadData"  HeaderText="{x:Static p:Resources.isInLoadData}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="isInReport"  HeaderText="{x:Static p:Resources.isInReport}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn MappingName="CalculationFormula"  HeaderText="{x:Static p:Resources.CalculationFormula}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            </syncfusion:SfDataGrid.Columns>
                        </syncfusion:SfDataGrid>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.WagonLoadStringStatus}">
           
                    <Grid >
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#41A175" Offset="0"/>
                                <GradientStop Color="Black" Offset="2"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="800*" />
                            
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>                        
                            <RowDefinition Height="1000*" />
                            <RowDefinition Height="150*" />
                        </Grid.RowDefinitions>
                        <!--Text box parameter grid-->
                        
                        <!--<DataGrid Grid.Column="1" Grid.Row="0" Margin="10">

                    </DataGrid>-->
                        <syncfusion:SfDataGrid  ScrollViewer.VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" Background="LightYellow" HorizontalAlignment="Center" FontSize="14" SelectedItem="{Binding NextloadSetting}"   ItemsSource="{Binding WagonLoadstringData,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="0"  Margin="5" BorderBrush="Teal">
                            <syncfusion:SfDataGrid.Columns>
                            <syncfusion:GridTextColumn MappingName="WagonNumber"  HeaderText="{x:Static p:Resources.WagonNumber}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="GetPut" HeaderText="{x:Static p:Resources.GetPut}">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="StationNo" HeaderText="{x:Static p:Resources.StationNo}">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="LoadType"  HeaderText="{x:Static p:Resources.LoadType}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Year"  HeaderText="{x:Static p:Resources.Year}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Month"  HeaderText="{x:Static p:Resources.Month}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Day"  HeaderText="{x:Static p:Resources.Day}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Hour"  HeaderText="{x:Static p:Resources.Hours}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Minutes"  HeaderText="{x:Static p:Resources.Minutes}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="Seconds"  HeaderText="{x:Static p:Resources.Seconds}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="MMDD"  HeaderText="{x:Static p:Resources.MMDD}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isMMDDValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isMMDDValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                            <syncfusion:GridTextColumn MappingName="LoadNumber"  HeaderText="{x:Static p:Resources.LoadNumber}" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="True">
                                                    <Setter Property="Background" Value="Lime"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding isLoadNoValid}" Value="False">
                                                    <Setter Property="Background" Value="Orange"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                </syncfusion:GridTextColumn>
                                
                            </syncfusion:SfDataGrid.Columns>
                        </syncfusion:SfDataGrid>
                        <Button Grid.Column="0" Grid.Row="1" Name="StopWagonStatus_Btn" Content="{Binding StartStopBTNcontent}" Margin="5" FontSize="22"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Command="{Binding StopWagonStatus}"/>

                    </Grid>
               
            </TabItem>


            <TabItem Header="{x:Static p:Resources.DatabaseGeneration}">
                <Grid >
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#41A175" Offset="0"/>
                            <GradientStop Color="Black" Offset="2"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500*" /> 
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100*" /> 
                    </Grid.RowDefinitions>
                    <Border BorderThickness="2" BorderBrush="Black" Grid.Column="1"  Grid.Row="0" Grid.RowSpan="5" Grid.ColumnSpan="5" >

                        <Border BorderThickness="2" BorderBrush="White" Grid.Column="1"  Grid.Row="0" Grid.RowSpan="5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="5" >
                            <WrapPanel  Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="30" Grid.ColumnSpan="5" >
                                <Grid > 
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="500*" />
                                        <ColumnDefinition Width="500*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="200*" />
                                        <RowDefinition Height="100*" />
                                        <RowDefinition Height="100*" />
                                        <RowDefinition Height="100*" />
                                    </Grid.RowDefinitions>
                                    <Label Margin="20" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Foreground="White" Content="{x:Static p:Resources.CreateDatabase}" FontFamily="Arial" VerticalAlignment="Center"  HorizontalAlignment="Center" FontSize="30" FontWeight="Bold"></Label>

                                    <Label Margin="5" Grid.Column="0" Grid.Row="1" Foreground="White" Content="{x:Static p:Resources.EnterDatbaseName}" VerticalAlignment="Center"  HorizontalAlignment="Center" ></Label>

                                    <TextBox Margin="5" Width="300" BorderThickness="1"   Grid.Column="1" Grid.Row="1"   
                                        VerticalAlignment="Center"  HorizontalAlignment="Center"  Background="White" Foreground="Black" Height="40"
                                     Text="{Binding NewDatabaseName ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" />

                                    <Label Margin="5" Grid.Column="0" Grid.Row="2" Foreground="White" Content="{x:Static p:Resources.SelectSqlServerName}"  VerticalAlignment="Center"  HorizontalAlignment="Center" ></Label>

                                    <dotNetKitControls:AutoCompleteComboBox   Grid.Row="2" Grid.Column="1"  IsTextSearchEnabled="False" IsDropDownOpen="False" StaysOpenOnEdit="True"   IsEditable="True" Background="LightYellow" FontSize="15" Foreground="Black" 
                                                                     Width="300" materialDesign:HintAssist.Foreground="GreenYellow"  materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"  Height="40" Margin="5" VerticalContentAlignment="Center"
                                                                     BorderBrush="Black" HorizontalContentAlignment="Left" materialDesign:HintAssist.Hint="{x:Static p:Resources.SelectSqlServerName}"  ItemsSource="{Binding AllServerList}"
                                                                     Name="cmbServerlist" SelectedItem="{Binding SelectedServerName, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center"  HorizontalAlignment="Center"/>

                                    <Button Margin="20" Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" Height="50" Width="300" FontWeight="Bold" FontSize="15" FontFamily="Arial"  Content="{x:Static p:Resources.CreateDatabase}" Background="LightGray" Foreground="Black" Command="{Binding GenerateDatabase}"/>
                                </Grid>
                            </WrapPanel>
                        </Border>
                        
                    </Border>
                </Grid>
            </TabItem>

            <TabItem Header="Chemical Names Master Entry">

                <Grid >
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#41A175" Offset="0"/>
                            <GradientStop Color="Black" Offset="2"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="100*" />


                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />



                    </Grid.RowDefinitions>
                    <Border BorderThickness="2" BorderBrush="White" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" >
                        <Grid Grid.Row="0" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Label Foreground="Yellow" Content="Master Entry " VerticalAlignment="Center" Grid.Row="0" HorizontalAlignment="Center" ></Label>
                            <!--<Label Foreground="White" Content="Station Name: " VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" ></Label>-->

                            <WrapPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ComboBox Foreground="Black"  Background="#41A175" materialDesign:HintAssist.Foreground="GreenYellow" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" Text="{Binding ChemicalEntity.PumpName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0" Width="300" VerticalContentAlignment="Bottom" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintComboBox}"  materialDesign:HintAssist.Hint="Dosing Station Names" Height="50" TabIndex="0" HorizontalAlignment="Center" ItemsSource="{Binding PumpMasterData}" DisplayMemberPath="PumpName" SelectedValuePath="PumpName" SelectedValue="{Binding ChemicalEntity.PumpName}" >
                                </ComboBox>

                                <!--<Label Content="Chemical Name :"  VerticalAlignment="Center" Foreground="WhiteSmoke"  Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right"></Label>-->
                                <TextBox  Foreground="White" materialDesign:HintAssist.Foreground="GreenYellow"  VerticalAlignment="Center" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" x:Name="txtChemicalName"  Text="{Binding ChemicalEntity.ChemicalName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0"  Width="300" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Chemical Name"  TabIndex="1" HorizontalAlignment="Center" Height="50" ></TextBox>

                                <!--<Label Content="Chemical Percentage for Dosing:"  VerticalAlignment="Center" Foreground="WhiteSmoke" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"></Label>-->
                                <TextBox Foreground="White"  materialDesign:HintAssist.Foreground="GreenYellow"  VerticalAlignment="Center" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow" x:Name="txtpercentage"  Text="{Binding ChemicalEntity.ChemicalPercentage, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" Margin="25,0,0,0"  Width="300" BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Quantity Percentage"  HorizontalAlignment="Center" TabIndex="2" Height="50" PreviewTextInput="TextBox_PreviewTextInput" ></TextBox>

                            </WrapPanel>
                            <!--<Label Content="Third Shift Time "  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="WhiteSmoke" Grid.Row="6" Grid.Column="0"></Label>
                        <TextBox BorderThickness="1" Foreground="White" Grid.Column="1" Grid.Row="6" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint=""  Text="{Binding ThirdShiftTime, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" HorizontalAlignment="Left" ></TextBox>-->
                            <!--<Button BorderBrush="GreenYellow" Grid.Column="2" Grid.Row="2" ToolTip="Write Tag to PLC"  Background="Transparent"  VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" Command="{Binding TagValueToWrite}">
                         <materialDesign:PackIcon Kind="ContentSaveAlertOutline"  Height="60" Width="35" Foreground="#9AC7B6" />                            
                        </Button>-->
                            <WrapPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <materialDesign:Badged BadgeBackground="WhiteSmoke" BadgeForeground="Red" Margin="25,0,0,0" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"   BadgeColorZoneMode="Standard"  HorizontalAlignment="Center" VerticalAlignment="Center" TabIndex="5" >
                                    <Button   BorderBrush="GreenYellow"  Command="{Binding AddChemicalNameCommand}"  HorizontalAlignment="Center" Width="150"  Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 20 0 20 " Content="Add"/>
                                </materialDesign:Badged>
                                <materialDesign:Badged  BadgeBackground="WhiteSmoke" BadgeForeground="Red" Margin="25,0,0,0" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"   BadgeColorZoneMode="Standard"  HorizontalAlignment="Center" VerticalAlignment="Center" TabIndex="5" >
                                    <Button   BorderBrush="GreenYellow"  Command="{Binding UpdateChemicalNameCommand}"  HorizontalAlignment="Center" Width="150"  Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 20 0 20 " Content="Update"/>
                                </materialDesign:Badged>

                                <materialDesign:Badged BadgeBackground="WhiteSmoke" BadgeForeground="Red" Margin="25,0,0,0" Badge="{Binding MessageName,UpdateSourceTrigger=PropertyChanged}"   BadgeColorZoneMode="Standard"  HorizontalAlignment="Center" VerticalAlignment="Center" TabIndex="5" >
                                    <Button   BorderBrush="GreenYellow"  Command="{Binding DeleteChemicalNameCommand}"  HorizontalAlignment="Center" Width="150"  Background="Transparent" Foreground="WhiteSmoke" FontSize="18" Height="60" Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 20 0 20 " Content="Delete"/>
                                </materialDesign:Badged>
                            </WrapPanel>

                        </Grid>
                    </Border>

                    <Border BorderThickness="2" BorderBrush="White" Grid.Column="0" Grid.Row="1">
                        <WrapPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Label Foreground="Yellow" Content="Remaining Pump Data " VerticalAlignment="Center" HorizontalAlignment="Center" ></Label>
                            <ListBox  HorizontalAlignment="Left" ItemsSource="{Binding RemainingPumpData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"    ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" Foreground="White"
                                      >
                                <!--<ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox  Foreground="Black" Content="{Binding ItemName, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding isTempChecked, UpdateSourceTrigger=PropertyChanged}" Margin="5 5 0 0">
                                        </CheckBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>-->
                            </ListBox>
                        </WrapPanel>
                    </Border>

                    <Border BorderThickness="2" BorderBrush="White" Grid.Column="1" Grid.Row="1"  Grid.ColumnSpan="2" >
                        <WrapPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Label Foreground="Yellow" Content="Chemical Name Master Data " VerticalAlignment="Center" Grid.Row="0" HorizontalAlignment="Center" ></Label>

                            <syncfusion:SfDataGrid AllowDeleting="True"  AutoGenerateColumns="False" Background="LightYellow" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" SelectedItem="{Binding ChemicalEntity}"   ItemsSource="{Binding ChemicalNameMasterCollection,UpdateSourceTrigger=PropertyChanged}" Margin="5" BorderBrush="Teal" Width="auto">
                                <syncfusion:SfDataGrid.Columns>
                                    <syncfusion:GridTextColumn MappingName="PumpNumber"  HeaderText="Station Number" ColumnSizer="Auto">
                                        <syncfusion:GridTextColumn.CellStyle>
                                            <Style TargetType="syncfusion:GridCell">
                                                <Setter Property="BorderBrush" Value="Teal"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="True">
                                                        <Setter Property="Background" Value="Lime"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="False">
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </syncfusion:GridTextColumn.CellStyle>
                                    </syncfusion:GridTextColumn>
                                    <syncfusion:GridTextColumn MappingName="PumpName"  HeaderText="Station Name" ColumnSizer="Star">
                                        <syncfusion:GridTextColumn.CellStyle>
                                            <Style TargetType="syncfusion:GridCell">
                                                <Setter Property="BorderBrush" Value="Teal"/>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="True">
                                                        <Setter Property="Background" Value="Lime"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="False">
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </syncfusion:GridTextColumn.CellStyle>
                                    </syncfusion:GridTextColumn>
                                    <syncfusion:GridTextColumn MappingName="ChemicalName"  HeaderText="Chemical Name" ColumnSizer="SizeToHeader" AllowEditing="True">
                                        <syncfusion:GridTextColumn.CellStyle>
                                            <Style TargetType="syncfusion:GridCell">
                                                <Setter Property="BorderBrush" Value="Teal"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="True">
                                                        <Setter Property="Background" Value="Lime"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="False">
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </syncfusion:GridTextColumn.CellStyle>
                                    </syncfusion:GridTextColumn>
                                    <syncfusion:GridTextColumn MappingName="ChemicalPercentage"  HeaderText="Chemical Percentage" ColumnSizer="SizeToHeader" AllowEditing="True">
                                        <syncfusion:GridTextColumn.CellStyle>
                                            <Style TargetType="syncfusion:GridCell">
                                                <Setter Property="BorderBrush" Value="Teal"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="True">
                                                        <Setter Property="Background" Value="Lime"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding isChemicalPercentComplete}" Value="False">
                                                        <Setter Property="Background" Value="Orange"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                        </syncfusion:GridTextColumn.CellStyle>
                                        <!--<syncfusion:GridTextColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox materialDesign:TextFieldAssist.SuffixText="" Text="{Binding ChemicalPercentage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }">
                                                    <TextBox.InputBindings>
                                                        <KeyBinding Key="Enter" Command="{Binding Path=UpdateChemicalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                                                    </TextBox.InputBindings>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="LostFocus">
                                                            <i:InvokeCommandAction Command="{Binding Path=UpdateChemicalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}"  />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DataTemplate>
                                        </syncfusion:GridTextColumn.CellTemplate>-->
                                    </syncfusion:GridTextColumn>
                                    <!--<syncfusion:GridTemplateColumn>
                                    <syncfusion:GridTemplateColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTemplateColumn.CellStyle>
                                    <syncfusion:GridTemplateColumn.CellTemplate>
                                        
                                        <DataTemplate>
                                            <Button Command="{Binding DeleteChemicalNameCommand}"  Content="Delete" Background="LightGray" Foreground="Black" />
                                    </DataTemplate>
                                    </syncfusion:GridTemplateColumn.CellTemplate>
                                </syncfusion:GridTemplateColumn>

                                <syncfusion:GridTemplateColumn >
                                    <syncfusion:GridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <Button Content="X" HorizontalAlignment="Center"  Command="{Binding Path=DataContext.DeleteChemicalNameCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid},Mode=FindAncestor}}" Padding="5,0">
                                                <Button.Style>
                                                    <Style>
                                                        <Setter Property="Button.Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True">
                                                                <Setter Property="Button.Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </DataTemplate>
                                    </syncfusion:GridTemplateColumn.CellTemplate>
                                </syncfusion:GridTemplateColumn>-->
                                    <!--<syncfusion:GridTextColumn HeaderText="Chemical Name" MappingName="ChemicalName">
                                    <syncfusion:GridTextColumn.CellStyle>
                                        <Style TargetType="syncfusion:GridCell">
                                            <Setter Property="BorderBrush" Value="Teal"/>
                                        </Style>
                                    </syncfusion:GridTextColumn.CellStyle>
                                    -->
                                    <!--<syncfusion:GridTextColumn.CellTemplate>
                                        
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="A" Text="{Binding HighSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.ChemicaName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ChemicalNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ChemicaName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ChemicalNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </syncfusion:GridTextColumn.CellTemplate>-->
                                    <!--
                                    </syncfusion:GridTextColumn>
                                <syncfusion:GridTextColumn HeaderText="Chemical Percentage" ColumnSizer="SizeToHeader">
                                    <syncfusion:GridTextColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox materialDesign:TextFieldAssist.SuffixText="A" Text="{Binding HighSP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" >
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Enter" Command="{Binding Path=DataContext.ChemicalPercentage, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ChemicalNo}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.StopDispatcherTimer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ChemicalPercentage, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding ChemicalNo}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </DataTemplate>
                                    </syncfusion:GridTextColumn.CellTemplate>
                                </syncfusion:GridTextColumn>-->
                                </syncfusion:SfDataGrid.Columns>
                            </syncfusion:SfDataGrid>
                            <!--<ListView Name="LstViewRectifier" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="5" ItemsSource="{Binding ChemicalNameMasterCollection,UpdateSourceTrigger=PropertyChanged}" >
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment"  Value="Center" />
                                        <Setter Property="Background"  Value="White" />
                                        <Setter Property="Foreground"  Value="Black" />
                                        <Setter Property="FontSize"  Value="16" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>

                                        <GridViewColumn DisplayMemberBinding="{Binding PumpNumber}"  Header="Station Number" Width="Auto">                                            
                                        </GridViewColumn>
                                        <GridViewColumn DisplayMemberBinding="{Binding PumpName}"  Header="Station Name" Width="Auto">
                                            
                                        </GridViewColumn>
                                        <GridViewColumn DisplayMemberBinding="{Binding ChemicalName}"  Header="Chemical Name" Width="auto" >
                                            
                                        </GridViewColumn>
                                        <GridViewColumn DisplayMemberBinding="{Binding ChemicalPercentage}"  Header="Chemical Percentage" Width="auto" >
                                            
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox materialDesign:TextFieldAssist.SuffixText="" Text="{Binding ChemicalPercentage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }">
                                                        <TextBox.InputBindings>
                                                            <KeyBinding Key="Enter" Command="{Binding Path=DataContext.UpdateChemicalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                                        </TextBox.InputBindings>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="LostFocus">
                                                                <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateChemicalCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"  />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>-->
                            <WrapPanel Grid.Column="0" Grid.Row="4"  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!--<Button Margin="5" Content="Auto"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="Lime" Foreground="Black"/>
                    <Button Margin="5" Content="Manual"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="BlueViolet"  />-->
                                <Label FontWeight="Bold" HorizontalAlignment="Center"  Foreground="White" Content="Complete" FontSize="16"  ></Label>

                                <Button Background="Lime" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="25" Height="25"></Button>



                                <!--<Button Margin="5" Content="Auto"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="Lime" Foreground="Black"/>
                    <Button Margin="5" Content="Manual"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="BlueViolet"  />-->
                                <Label FontWeight="Bold" HorizontalAlignment="Center"  Foreground="White"  Content="Incomplete" FontSize="16"  ></Label>
                                <Button Background="Orange" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="25" Height="25"></Button>
                            </WrapPanel>
                        </WrapPanel>
                    </Border>


                </Grid>


            </TabItem>

        </dragablz:TabablzControl>
      
        <!--<Popup  HorizontalAlignment="Center" VerticalAlignment="Center"   Name="FormulaPopup"  Width="700" Height="700" IsOpen="{Binding isOpenFormulaPopup}">
            <Grid>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#41A175" Offset="0"/>
                        <GradientStop Color="Black" Offset="2"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="500*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Multiline text" Text="{Binding NextloadSetting.ParameterName,UpdateSourceTrigger=PropertyChanged }">
                </TextBox>
                <ComboBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding NextLoadData}"></ComboBox>
            </Grid>
        </Popup>-->

 

        <materialDesign:PopupBox  Height="500" Width="600" HorizontalAlignment="Center" VerticalAlignment="Center" StaysOpen="True" Name="FormulaPopup" IsPopupOpen="{Binding isOpenFormulaPopup}" Margin="-66,-332,-85,-333" Visibility="Hidden">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>-->
                <!--<Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="100*"/>
                    </Grid.ColumnDefinitions>
                </Grid>-->
                <!--<DatePicker Grid.Column="0" Grid.Row="0" Margin="5" materialDesign:HintAssist.Hint="Start Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                    <materialDesign:TimePicker Grid.Column="1" Grid.Row="0" Margin="5" Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="Start Time" />
                    <DatePicker Grid.Column="2" Grid.Row="0" Margin="5" materialDesign:HintAssist.Hint="End Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                    <materialDesign:TimePicker Grid.Column="3" Grid.Row="0" Margin="5" Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="End Time" />
                    <Button Background="LightGray" Margin="5" Grid.Column="4" Grid.Row="0" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" Content="{materialDesign:PackIcon EventNoteOutline, Size=45}" ToolTip="Get Data"/>
                </Grid>
                <syncfusion:SfDataGrid Name="dgvAlarmAndEvent" MinHeight="600" MinWidth="800"  ShowRowHeader="True" RowSelectionBrush="WhiteSmoke"   ColumnSizer="AutoWithLastColumnFill"  AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1"  Margin="10" ItemsSource="{Binding AlarmEventHistory,UpdateSourceTrigger=PropertyChanged}" >

                </syncfusion:SfDataGrid>
                <Button Margin="5" Background="LightGray" HorizontalAlignment="Center" VerticalAlignment="Center"  HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" Grid.Column="1" Grid.Row="2" Content="{materialDesign:PackIcon Printer, Size=45}" ToolTip="Print" Click="Button_Click"/>-->
                <TextBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="" Text="{Binding NextloadSetting.ParameterName,UpdateSourceTrigger=PropertyChanged }">
                </TextBox>
                <TextBox Grid.Row="0" Grid.Column="1" materialDesign:HintAssist.Hint="" Text="{Binding NextloadSetting.ParameterName,UpdateSourceTrigger=PropertyChanged }">
                </TextBox>
                <ComboBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding ParameterList}"></ComboBox>
            </Grid>

        </materialDesign:PopupBox>
        

    </Grid>

</syncfusion:ChromelessWindow>

<syncfusionWindow:ChromelessWindow x:Class="IndiSCADA_ST.View.HomeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IndiSCADA_ST.View"
        xmlns:Viewmodel="clr-namespace:IndiSCADA_ST.ViewModel"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:syncfusionWindow="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusion="clr-namespace:Syncfusion.UI.Xaml.Charts;assembly=Syncfusion.SfChart.WPF"
        xmlns:syncfusion1="http://schemas.syncfusion.com/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:p = "clr-namespace:IndiSCADA_ST.Properties"
        mc:Ignorable="d"
        TextElement.Foreground="WhiteSmoke"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="17"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="Humanst521 Lt Bt" 
        Title="{x:Static p:Resources.IndiSCADAST}" TitleBarHeight="40" TitleFontSize="17" Background="#EBFFFD" WindowState="Maximized" WindowStyle="None"  TitleBarForeground="White" TitleBarBackground="#00786B"  Loaded="_Window_Loaded" Closing="ChromelessWindow_Closing"   >
    <Window.Resources>
        <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
            <DockPanel Height="50" LastChildFill="True"  Background="#EBFFFD">
                <Grid x:Name="IconPart"
                          Width="80" 
                          DockPanel.Dock="Left">
                    <Image Margin="2,2,2,2" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding Glyph}"
                               Stretch="Uniform" />
                </Grid>
                <TextBlock x:Name="TextPart"  Margin="10,0,0,0" Foreground="#FF5B5B5B"
                               VerticalAlignment="Center"
                               FontSize="16"
                               FontWeight="Bold"
                               Text="{Binding Label}" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
            <DockPanel Height="60" LastChildFill="True"  Background="#EBFFFD">
                <Grid x:Name="IconPart" 
                          Width="80" 
                          DockPanel.Dock="Left">
                    <Image Margin="2,2,2,2" Width="70"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding Glyph}"
                               Stretch="Uniform" />
                </Grid>
                <TextBlock x:Name="TextPart"  Margin="10,0,0,0" Foreground="#FF5B5B5B"
                               VerticalAlignment="Center"
                               FontSize="16"
                               FontWeight="Bold"
                               Text="{Binding Label}" />
            </DockPanel>
            <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                    <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                    <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                </DataTrigger>
            </DataTemplate.Triggers>-->
        </DataTemplate>
        <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
        </Style>

        <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
            <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />

            <Setter Property="ShowSelectionIndicator" Value="True" />
        </Style>

        <Style x:Key = "PlantAutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedDarkButton}" >
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="110"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlantAM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding PlantAM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Manual"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonComm"  TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Green"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.PlantCommunicationStatus ,UpdateSourceTrigger=PropertyChanged}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="StartBlinking">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="White" To="OrangeRed"  Duration="00:00:00.8" RepeatBehavior="Forever" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.PlantCommunicationStatus,UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <DataTrigger.EnterActions>
                        <RemoveStoryboard BeginStoryboardName="StartBlinking"/>

                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "PlantCycleOn" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedDarkButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="110"></Setter>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlantCycle}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Content" Value="Cycle Start"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding PlantCycle}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Content" Value="Cycle Stop"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "W1AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W1AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding PlantAM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W2AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W2AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W2AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W3AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W3AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W3AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W4AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W4AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W4AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W5AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W5AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W5AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W6AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W6AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W6AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W7AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W7AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W7AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key = "W8AutoMan" TargetType="Button" BasedOn ="{StaticResource MaterialDesignRaisedAccentButton}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding W8AM}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding W8AM}" Value="0">
                    <Setter Property="Background" Value="BlueViolet"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key = "PlcCommunication" TargetType="Button" BasedOn ="{StaticResource MaterialDesignFloatingActionAccentButton}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlantCommunicationStatus}" Value="1">
                    <Setter Property="Background" Value="Lime"/>
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding PlantCommunicationStatus}" Value="0">
                    <Setter Property="Background" Value="OrangeRed"/>
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.DataContext>
        <Viewmodel:HomeViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding  ExitYes}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*" />
            <ColumnDefinition Width="200*" />
            <ColumnDefinition Width="200*" />
            <ColumnDefinition Width="200*" />
            <ColumnDefinition Width="200*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20*" />
            <RowDefinition Height="20*" />
        </Grid.RowDefinitions>
        <syncfusionWindow:NotifyIcon Name="notifyIcon" BalloonTipText="Communication Started" BalloonTipTitle="IndiSCADA-ST" 
            ShowBalloonTipTime="1000" HideBalloonTipTime="1000"/>

        <!--Hamburger menu options Start-->
        <Controls:HamburgerMenu  Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2"  ShowSelectionIndicator="True"   Style="{StaticResource HamburgerMenuCreatorsStyle}"  HamburgerWidth="80" CompactPaneLength="80" OptionsItemTemplate="{StaticResource HamburgerOptionsMenuItem}" ItemTemplate="{StaticResource HamburgerMenuItem}"  VerticalAlignment="Stretch" Name="HamburgerMenu"  PaneForeground="#FF5B5B5B" PaneBackground="#EBFFFD"  IsPaneOpen="False" DisplayMode="CompactInline" Panel.ZIndex="2" ItemInvoked="HamburgerMenu_ItemInvoked" >
            <Controls:HamburgerMenu.ItemsSource>
                <Controls:HamburgerMenuItemCollection>

                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/alarm-icon-1.png" Label="{x:Static p:Resources.AlarmAndEvent}" Tag="Alarm And Event" />
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/overview-icon-1.png" Label="{x:Static p:Resources.Overview}" Tag="Overview" />
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/io-status-icon-1.png" Label="{x:Static p:Resources.IOStatus}" Tag="IO Status"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/next-load-icon-1.png" Label="{x:Static p:Resources.NextLoad}" Tag="Next Load"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/report-icon-1.png" Label="{x:Static p:Resources.Reports}" Tag="Reports"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/settings-icon-1.png" Label="{x:Static p:Resources.Settings}" Tag="Settings"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/trends-icon-1.png" Label="{x:Static p:Resources.Trends}" Tag="Trends"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/alarm-time-icons-1.png" Label="{x:Static p:Resources.AlarmTime}" Tag="Alarm Time"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/tank-details-icon-1.png" Label="{x:Static p:Resources.TankDetails}" Tag="Tank Details"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/part-master-icon-1.png" Label="{x:Static p:Resources.PartMaster}" Tag="Part Master"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/user-master-icon-1.png" Label="{x:Static p:Resources.UserMaster}" Tag="User Master"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/configuration-icon-1.png" Label="{x:Static p:Resources.Configuration}" Tag="Configuration"/>
                    <Controls:HamburgerMenuGlyphItem Glyph="/Image/Flag-India.jpg" Label="{x:Static p:Resources.ChooseLanguage}" Command="{Binding OpenLanguageSelection}" />
               
                    <!--<Controls:HamburgerMenuGlyphItem Glyph="/Image/icon.png" Label="Exit" Tag="Exit"/>-->
                </Controls:HamburgerMenuItemCollection>

            </Controls:HamburgerMenu.ItemsSource>
            <Controls:HamburgerMenu.OptionsItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <!--<Controls:HamburgerMenuGlyphItem Glyph="/Image/icon.png" Label="About us" Tag="About us"  />-->
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.OptionsItemsSource>


            <!--  Content  -->
            <Controls:HamburgerMenu.ContentTemplate>
                <DataTemplate>
                    <Grid x:Name="ContentGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0">
                            <TextBlock x:Name="Header"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="24"
                                           Text="{Binding Label}" />
                        </Border>
                        <Controls:TransitioningContentControl Grid.Row="1"
                                                                  Content="{Binding Glyph}"
                                                                  RestartTransitionOnContentChange="True"
                                                                  Transition="Default">
                            <Controls:TransitioningContentControl.ContentTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Mode=OneWay}" />
                                </DataTemplate>
                            </Controls:TransitioningContentControl.ContentTemplate>
                        </Controls:TransitioningContentControl>
                    </Grid>
                </DataTemplate>
            </Controls:HamburgerMenu.ContentTemplate>
        </Controls:HamburgerMenu>
        <!--Hamburger menu options End-->

        <!--common-->
        <Grid Grid.Row="0" Grid.Column="1"   VerticalAlignment="Top" Margin="1">
            <!--<Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#F8C7CE" Offset="1.8"/>
                    </LinearGradientBrush>
                </Grid.Background>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*" />
                <ColumnDefinition Width="70*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="55" />
                <RowDefinition Height="150*" />
                <RowDefinition Height="200*" />
                <RowDefinition Height="150*" />
            </Grid.RowDefinitions>


            <Label Foreground="#E74B3C" Grid.ColumnSpan="2" FontWeight="Bold" Grid.Column="0" Grid.Row="0" Content="{x:Static p:Resources.StarFastenersPvtLtd}" FontSize="17"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ></Label>
            <WrapPanel  Grid.Column="1" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label Content="{x:Static p:Resources.CurrentUser}" Foreground="#E74B3C" FontSize="15" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                <Label FontSize="15" Foreground="#E74B3C" FontWeight="Bold" HorizontalAlignment="Center" Content="{Binding UserName}"  VerticalAlignment="Center"></Label>
                <Button VerticalAlignment="Center" ToolTip="LogIn / LogOut"  HorizontalContentAlignment="Center" Height="Auto" Width="Auto"  BorderThickness="0" Grid.Column="1" Grid.Row="0"  Background="Transparent" Name="UserLogout" Click="UserLogout_Click">
                    <materialDesign:PackIcon Kind="LoginVariant"  Height="25" Width="Auto" Foreground="#5A0502"/>
                </Button>
            </WrapPanel>

            <!--set cycle time,Communication Status-->
            <Grid  Grid.Row="1" Grid.Column="0"  Grid.ColumnSpan="2" Margin="1" >
                <Grid.RowDefinitions>
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FE8583" Offset="0"/>
                        <GradientStop Color="#FF9997" Offset="1.8"/>
                        <!--<GradientStop Offset="0.0" Color="#CCCCFF" />
                        <GradientStop Offset="1.0" Color="White" />-->
                    </LinearGradientBrush>
                </Grid.Background>

                <!--<Button VerticalAlignment="Center" HorizontalContentAlignment="Center" Height="Auto" Width="Auto"  BorderThickness="0" Grid.Column="0" Grid.Row="0"  Background="Transparent"  >
                        <materialDesign:PackIcon Kind="User"  Height="150" Width="Auto" Foreground="#5A0502"/>
                    </Button>-->
                <!--<Border BorderBrush="#5A0502" BorderThickness="1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4">-->
                <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.CycleTime}" FontSize="20" FontWeight="ExtraBold" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" ></Label>
                <!--</Border>-->
                <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.Current}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding ActualCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="15" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" ></Label>

                <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.Last}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" ></Label>
                <Label  Grid.Column="1" HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding LastCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="15" Grid.Row="2" HorizontalAlignment="Center"  VerticalAlignment="Center" ></Label>

                <Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.Set}" FontSize="18" FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" ></Label>

                <!--<Label  HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding SetCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="20" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="3"  ></Label>-->
                <TextBox  Height="30" Width="70" HorizontalContentAlignment="Center" Foreground="#5A0502" FontSize="15" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="3" IsReadOnly="{Binding SetCycleTimeReadOnly, UpdateSourceTrigger=PropertyChanged}" Text="{Binding SetCycleTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True }" PreviewTextInput="TextBox_PreviewTextInput">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding WriteCycleTime}" />
                    </TextBox.InputBindings>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding RefreshCycleTimeSet}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding WriteCycleTime}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>

                <Label  Grid.Column="2" HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{x:Static p:Resources.Avg}" FontSize="18" FontWeight="Bold" Grid.Row="2" HorizontalAlignment="Left"  VerticalAlignment="Center" ></Label>
                <Label  Grid.Column="3" HorizontalContentAlignment="Center"  Foreground="#5A0502"  Content="{Binding AvgCycleTime, UpdateSourceTrigger=PropertyChanged }" FontSize="15" Grid.Row="2" HorizontalAlignment="Center"  VerticalAlignment="Center" ></Label>


                <!--<Label  Grid.Column="2" Foreground="#5A0502"  Content=" " FontSize="18" FontWeight="Bold" Grid.Row="3" HorizontalAlignment="Left"  VerticalAlignment="Center" ></Label>-->

                <!--<Label Name="lblHDE" Grid.ColumnSpan="4" Grid.Row="3"  Width="auto"  FontWeight="Bold" HorizontalAlignment="left"  Foreground="#5A0502" Content="{Binding HDEProcess ,UpdateSourceTrigger=PropertyChanged}" FontSize="20"  ></Label>-->

                <WrapPanel Grid.Column="0"   Grid.ColumnSpan="4"  Grid.Row="3"  Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Label FontWeight="Bold" HorizontalAlignment="left"  Foreground="#5A0502" Content="{x:Static p:Resources.CommunicationStatus}" FontSize="18"  ></Label>
                    <Button Name="btnCommCheck" Style="{StaticResource ButtonComm}" Background="lime" Width="20" Height="20">

                    </Button>
                </WrapPanel>

                <!--<syncfusion1:DropDownButtonAdv Background="Transparent" BorderBrush="Transparent" Grid.Column="0"   Grid.ColumnSpan="4"  Grid.Row="3" Label="{x:Static p:Resources.ChooseLanguage}"  Name="LanguageSelection" LargeIcon="/Image/Flag-India.jpg"
                                               SizeMode="Large" HorizontalAlignment="Right" VerticalAlignment="Center" >
                    <ListBox   ItemsSource="{Binding LanguageList,UpdateSourceTrigger=PropertyChanged}" SelectedItem = "{Binding SelectedLang,UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ChangeLanguageClick}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </syncfusion1:DropDownButtonAdv>-->


            </Grid>

            <!-- wagon auto manual-->
            <Grid  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="1">
                <Grid.RowDefinitions>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#A8CDFD" Offset="0"/>
                        <GradientStop Color="#BCE5FB" Offset="1.8"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <!--<Button VerticalAlignment="Center" HorizontalContentAlignment="Center" Height="Auto" Width="Auto"  BorderThickness="0" Grid.Column="0" Grid.Row="0"  Background="Transparent"  >
                        <materialDesign:PackIcon Kind="ChemicalWeapon"  Height="80" Width="Auto" Foreground="#015B25"/>
                    </Button>
                    <Label  Grid.Column="1" HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding TotalLoads,UpdateSourceTrigger=PropertyChanged}" FontSize="80" Grid.Row="0" HorizontalAlignment="Left"  VerticalAlignment="Center" ></Label>                  
                    
                   <Label FontWeight="Bold" Grid.Column="0"  Grid.Row="1" HorizontalAlignment="Center"  Grid.ColumnSpan="2"  Foreground="#015B25" Content="Load Under Process" FontSize="30"  ></Label>-->
                <Label FontWeight="Bold" Grid.Column="0"  Grid.Row="0" HorizontalAlignment="Center"  Grid.ColumnSpan="2"  Foreground="#002C56" Content="{x:Static p:Resources.PlantStatus}" FontSize="20"  ></Label>
                <Button Margin="5" Grid.Column="0" Grid.Row="1" Style="{StaticResource PlantAutoMan}" Foreground="#002C56"  materialDesign:ButtonAssist.CornerRadius="25"  />
                <Button Margin="5" Grid.Column="1" Grid.Row="1" Style="{StaticResource PlantCycleOn}" Foreground="#002C56" materialDesign:ButtonAssist.CornerRadius="25"  />
                <Label FontWeight="Bold" Grid.Column="0"  Grid.Row="2" HorizontalAlignment="Center"  Grid.ColumnSpan="2"   Foreground="#002C56" Content="{x:Static p:Resources.WagonStatus}" FontSize="20"  ></Label>
                <WrapPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">

                    <!--<Button Margin="1" Style="{StaticResource W1AutoMan}" Content="W1"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon1 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W2AutoMan}" Content="W2"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon2 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W3AutoMan}" Content="W3"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0" Foreground="#002C56" Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon3 Alarm Summary" />
                    <Button Margin="1" Style="{StaticResource W4AutoMan}" Content="W4"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56"  Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon4 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W5AutoMan}" Content="W5"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56"  Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon5 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W6AutoMan}" Content="W6"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56"  Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon6 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W7AutoMan}" Content="W7"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56"  Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon7 Alarm Summary"/>
                    <Button Margin="1" Style="{StaticResource W8AutoMan}" Content="W8"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" Command="{Binding OpenSummeryPopup}" CommandParameter="Wagon8 Alarm Summary" />-->

                    <Button Margin="1" Style="{StaticResource W1AutoMan}" Content="W1"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0" Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W2AutoMan}" Content="W2"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W3AutoMan}" Content="W3"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0" Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W4AutoMan}" Content="W4"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W5AutoMan}" Content="W5"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W6AutoMan}" Content="W6"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />
                    <Button Margin="1" Style="{StaticResource W7AutoMan}" Content="W7"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />
                    <!--<Button Margin="1" Style="{StaticResource W8AutoMan}" Content="W8"  materialDesign:ButtonAssist.CornerRadius="20 20 0 0"  Foreground="#002C56" />-->
                </WrapPanel>
                <WrapPanel Grid.Column="0" Grid.Row="4"  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--<Button Margin="5" Content="Auto"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="Lime" Foreground="Black"/>
                    <Button Margin="5" Content="Manual"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="BlueViolet"  />-->
                    <Label FontWeight="Bold" HorizontalAlignment="Center"  Foreground="#015B25" Content="{x:Static p:Resources.Auto}" FontSize="16"  ></Label>

                    <Button Background="Lime" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="25" Height="25"></Button>
                </WrapPanel>
                <WrapPanel Grid.Column="1" Grid.Row="4"  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                    <!--<Button Margin="5" Content="Auto"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="Lime" Foreground="Black"/>
                    <Button Margin="5" Content="Manual"  Style="{StaticResource MaterialDesignFlatMidBgButton}" Background="BlueViolet"  />-->
                    <Label FontWeight="Bold" HorizontalAlignment="Center"  Foreground="#015B25" Content="{x:Static p:Resources.Manual}" FontSize="16"  ></Label>
                    <Button Background="BlueViolet" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Width="25" Height="25"></Button>
                </WrapPanel>

            </Grid>

            <!--Alarm count-->
            <Grid  Grid.Row="3" Grid.Column="0" Margin="1" >
                <Grid.RowDefinitions>
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#F6CB66" Offset="0"/>
                        <GradientStop Color="#FCA882" Offset="0.5"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <!--<Button VerticalAlignment="Center" HorizontalContentAlignment="Center" Height="Auto" Width="Auto"  BorderThickness="0" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"  Background="Transparent"  >
                        <materialDesign:PackIcon Kind="Alarm"  Height="80" Width="Auto" Foreground="#582700"/>
                    </Button>-->
                <Label  Grid.Column="0" HorizontalContentAlignment="Center"  Foreground="#582700"  Content="{x:Static p:Resources.AlarmCount}" FontWeight="Bold" FontSize="18" Grid.Row="0" HorizontalAlignment="Center"  VerticalAlignment="Center" Grid.ColumnSpan="2" ></Label>
                <Label  Grid.Column="2" HorizontalContentAlignment="Center"  Foreground="#582700"  Content="{Binding AlarmONCount,UpdateSourceTrigger=PropertyChanged}" FontSize="18" Grid.Row="1" HorizontalAlignment="Left"  VerticalAlignment="Center" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Live Alarm Summary"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>
                <Button Background="Transparent"  Grid.Column="0" Margin="5" Grid.Row="1" Content="{materialDesign:PackIcon Alarm, Size=25}" ToolTip="Current Alarm Count" BorderThickness="0" />
                <Label  Grid.Column="2" HorizontalContentAlignment="Center"  Foreground="#582700"  Content="{Binding AlarmNACKCount,UpdateSourceTrigger=PropertyChanged}" FontSize="18" Grid.Row="2" HorizontalAlignment="Left"  VerticalAlignment="Center" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Acknoledge Alarm Summary"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>
                <Button  Background="Transparent"  Grid.Column="0" Margin="5" Grid.Row="2"  Content="{materialDesign:PackIcon Check, Size=25}" ToolTip="Not ACK Count"  BorderThickness="0"  />

            
            </Grid>

            <!--shift summary-->
            <Grid  Grid.Row="3" Grid.Column="1" Margin="1" >
                <Grid.RowDefinitions>
                    <RowDefinition  Height="Auto" />
                    <RowDefinition Height="Auto"  />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#A1E998" Offset="0"/>
                        <GradientStop Color="#CBF77C" Offset="1.8"/>
                    </LinearGradientBrush>

                </Grid.Background>
                <!--<Button VerticalAlignment="Center" HorizontalContentAlignment="Center" Height="Auto" Width="Auto"  BorderThickness="0" Grid.Column="0" Grid.Row="0"  Background="Transparent"  >
                        <materialDesign:PackIcon Kind="ChemicalWeapon"  Height="80" Width="Auto" Foreground="#002C56"/>
                    </Button>-->
                <Label Background="Transparent" HorizontalContentAlignment="Left"  Foreground="#015B25"  Content="{x:Static p:Resources.PartQty}" FontSize="16" FontWeight="Bold"  Grid.Row="0" Grid.Column="1"  HorizontalAlignment="Left"  VerticalAlignment="Center"  ></Label>
                <Label Background="Transparent" HorizontalContentAlignment="Left"  Foreground="#015B25"  Content="{x:Static p:Resources.LoadCount}" FontSize="16" FontWeight="Bold" Grid.Row="0" Grid.Column="2"   HorizontalAlignment="Left"  VerticalAlignment="Center"  ></Label>

                <!--<WrapPanel  Grid.Row="1" Grid.Column="1" Orientation="Vertical">
                    <WrapPanel  Grid.Row="1" Grid.Column="1" Orientation="Vertical">-->
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift1Name ,UpdateSourceTrigger=PropertyChanged}" FontSize="16"  FontWeight="Bold"  HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" ></Label>
                <Label  HorizontalContentAlignment="Center" Foreground="#015B25"  Content="{Binding Shift1Quantity ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift1LoadCount ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" ></Label>

                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift2Name ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" FontWeight="Bold"  HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift2Quantity ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="2" Grid.Column="1" ></Label>
                <Label  HorizontalContentAlignment="Center" Foreground="#015B25"  Content="{Binding Shift2LoadCount ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" ></Label>

                <!--<Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift3Name ,UpdateSourceTrigger=PropertyChanged}" FontSize="16"  FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="3" Grid.Column="0" ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding Shift3Quantity ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="3" Grid.Column="1" ></Label>
                <Label  HorizontalContentAlignment="Center" Foreground="#015B25"  Content="{Binding Shift3LoadCount ,UpdateSourceTrigger=PropertyChanged}" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" ></Label>-->


                <!--<WrapPanel  Grid.Row="1" Grid.Column="1" Orientation="Vertical">
                </WrapPanel>-->
                <!--<WrapPanel Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">-->
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{x:Static p:Resources.Total}" FontSize="16" FontWeight="Bold"  HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="4" Grid.Column="0"  ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding TotalQuantity ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="16"  HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="4" Grid.Column="1"  ></Label>
                <Label  HorizontalContentAlignment="Center"  Foreground="#015B25"  Content="{Binding LoadCount ,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="16"  HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="4" Grid.Column="2"  ></Label>
                <!--</WrapPanel>-->
            </Grid>
        </Grid>


        <!--Alarm Summary-->
        <Grid Grid.Row="0" Grid.Column="2" Margin="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65*" />
                <ColumnDefinition Width="50*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#CAE8F7" Offset="1.8"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <syncfusion:SfChart  Margin="2" Foreground ="Black" Background="Transparent" Palette="SandyBeach"  >
                    <syncfusion:SfChart.PrimaryAxis>
                        <syncfusion:CategoryAxis Header="Alarm Group" FontSize="14"/>
                    </syncfusion:SfChart.PrimaryAxis>

                    <!--Initialize the vertical axis for SfChart-->
                    <syncfusion:SfChart.SecondaryAxis>
                        <syncfusion:NumericalAxis Header="Alarm Count" FontSize="14"/>
                    </syncfusion:SfChart.SecondaryAxis>

                    <syncfusion:SfChart.Resources>
                        <ItemsPanelTemplate x:Key="itemPanelTemplate">
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </syncfusion:SfChart.Resources>

                    <!--Adding Legend to the SfChart-->
                    <syncfusion:SfChart.Legend>
                        <syncfusion:ChartLegend IconHeight="10" IconWidth="10" Margin="0,0,0,5" HorizontalAlignment="Center" VerticalAlignment="Center" DockPosition="Right" BorderBrush="Black" BorderThickness="1" IconVisibility="Visible" CornerRadius="5" ItemMargin="5">
                        </syncfusion:ChartLegend>

                    </syncfusion:SfChart.Legend>

                    <!--Initialize the series for SfChart-->
                    <!--<syncfusion:DoughnutSeries Palette="Elite" Label="Alarm Name"  ItemsSource="{Binding AlarmSummaryGraph}" XBindingPath="AlarmName" YBindingPath="AlarmCount" ShowTooltip="True" >-->
                    <syncfusion:PieSeries Palette="Elite" Label="Alarm Name"  ItemsSource="{Binding AlarmSummaryGraph}" XBindingPath="AlarmName" YBindingPath="AlarmCount" ShowTooltip="True" >
                        <syncfusion:PieSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo ShowLabel="True">
                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:PieSeries.AdornmentsInfo>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Alarm Summary"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>


                    </syncfusion:PieSeries>
                </syncfusion:SfChart>
            </Grid >
            <Label Background="#2488B9" Foreground="White" Grid.Column="0" Grid.Row="0" Content="{x:Static p:Resources.AlarmSummary}" FontSize="20"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ></Label>
            <Label Background="#2488B9" Foreground="White" Grid.Column="1" Grid.Row="0" Content="{Binding AlarmGraphLabel}" FontSize="20"  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" ></Label>
        </Grid>

        <!--Current Consumption Summary-->
        <Grid Grid.Row="0" Grid.Column="3"  Grid.ColumnSpan="2" Margin="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*" />
                <ColumnDefinition Width="65*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <!--<RowDefinition Height="50" />-->
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#F8C7CE" Offset="2.8"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <syncfusion:SfChart Grid.Row="1" Margin="5" Foreground ="Black" Background="Transparent" Palette="SandyBeach"  >
                    <syncfusion:SfChart.PrimaryAxis>
                        <syncfusion:CategoryAxis Header="{x:Static p:Resources.RectifierStationName}" FontSize="14"/>
                    </syncfusion:SfChart.PrimaryAxis>

                    <!--Initialize the vertical axis for SfChart-->
                    <syncfusion:SfChart.SecondaryAxis>
                        <syncfusion:NumericalAxis Header="{x:Static p:Resources.RectifierTotalcurrent}" FontSize="14"/>
                    </syncfusion:SfChart.SecondaryAxis>

                    <!--Adding Legend to the SfChart-->
                    <!--<syncfusion:SfChart.Legend>
                        <syncfusion:ChartLegend/>
                    </syncfusion:SfChart.Legend>-->

                    <!--Initialize the series for SfChart-->
                    <syncfusion:BarSeries    Palette="Elite" Label="Rectifier Station Name"  ItemsSource="{Binding CurrentConsumptionSummary}" XBindingPath="RectifierStnName" YBindingPath="CurrentConsumptionCount" ShowTooltip="True" >
                        <!--<syncfusion:DoughnutSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo ShowLabel="True" >
                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:DoughnutSeries.AdornmentsInfo>-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Rectifier Summary"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </syncfusion:BarSeries>
                </syncfusion:SfChart>
            </Grid >

            <Label Background="#C1172F" Foreground="White"  Grid.Column="0" Grid.Row="0" Content="{x:Static p:Resources.RectifierCurrentConsumptionSummary}" FontSize="20"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ></Label>
            <Label Background="#C1172F" Foreground="White"  Grid.Column="1" Grid.Row="0" Content="{Binding CurrentGraphLabel}" FontSize="20"  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" ></Label>
        </Grid>


        <!--PartName Summary-->
        <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65*" />
                <ColumnDefinition Width="50*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="1" >
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#DDF4D4" Offset="1.8"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <syncfusion:SfChart  Margin="5" Foreground ="Black" Background="Transparent" Palette="LightCandy"   >
                    <syncfusion:SfChart.PrimaryAxis>
                        <syncfusion:CategoryAxis Header="{x:Static p:Resources.PartName}" FontSize="14" LabelRotationAngle="45"/>
                    </syncfusion:SfChart.PrimaryAxis>

                    <!--Initialize the vertical axis for SfChart-->
                    <syncfusion:SfChart.SecondaryAxis>
                        <syncfusion:NumericalAxis Header="{x:Static p:Resources.PartCount}" FontSize="14"  />
                    </syncfusion:SfChart.SecondaryAxis>

                    <!--Adding Legend to the SfChart-->
                    <!--<syncfusion:SfChart.Legend>
                        <syncfusion:ChartLegend/>
                    </syncfusion:SfChart.Legend>-->

                    <!--Initialize the series for SfChart-->
                    <syncfusion:ColumnSeries Palette="LightCandy" Label="Part Name" ItemsSource="{Binding PartNameSummary,UpdateSourceTrigger=PropertyChanged}" XBindingPath="PartName" YBindingPath="PartNameCount" ShowTooltip="True"  >
                        <syncfusion:ColumnSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo ShowLabel="True" AdornmentsPosition="TopAndBottom"  >
                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:ColumnSeries.AdornmentsInfo>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Part Summary"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </syncfusion:ColumnSeries>
                </syncfusion:SfChart>
            </Grid >
            <Label Background="#5AAB38" Foreground="White" Grid.Column="0" Grid.Row="0" Content="{x:Static p:Resources.ProductionDataSummary}" FontSize="20"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ></Label>
            <Label Background="#5AAB38" Foreground="White" Grid.Column="1" Grid.Row="0" Content="{Binding ProductionGraphLabel}" FontSize="20"  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" ></Label>

        </Grid>

        <!--Chemical Consumption Summary-->
        <Grid Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Margin="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65*" />
                <ColumnDefinition Width="50*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <!--<RowDefinition Height="50" />-->
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#F8C7CE" Offset="2.8"/>
                    </LinearGradientBrush>
                </Grid.Background>

                <syncfusion:SfChart Grid.Row="1" Margin="5" Foreground ="Black" Background="Transparent" Palette="SandyBeach"  >
                    <syncfusion:SfChart.PrimaryAxis>
                        <syncfusion:CategoryAxis Header="{x:Static p:Resources.ChemicalName}" FontSize="14"/>
                    </syncfusion:SfChart.PrimaryAxis>
                    <!--Initialize the vertical axis for SfChart-->
                    <syncfusion:SfChart.SecondaryAxis>
                        <syncfusion:NumericalAxis Header="{x:Static p:Resources.ConsumptionQuantity}" FontSize="14"/>
                    </syncfusion:SfChart.SecondaryAxis>
                    <!--Adding Legend to the SfChart-->
                    <!--<syncfusion:SfChart.Legend>
                        <syncfusion:ChartLegend/>
                    </syncfusion:SfChart.Legend>-->

                    <!--Initialize the series for SfChart-->

                    <syncfusion:BarSeries    Palette="Elite"  ItemsSource="{Binding ChemicalConsumptionSummary}" XBindingPath="ChemicalName" YBindingPath="ChemicalConsumptionCount" ShowTooltip="True" >

                        <!--<syncfusion:DoughnutSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo ShowLabel="True" >
                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:DoughnutSeries.AdornmentsInfo>-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding OpenSummeryPopup}"  CommandParameter="Chemical Summary"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </syncfusion:BarSeries>
                </syncfusion:SfChart>

            </Grid >
            <Label Background="#C1172F" Foreground="White"  Grid.Column="0" Grid.Row="0" Content="{x:Static p:Resources.ChemicalConsumptionSummary}" FontSize="20"  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" ></Label>
            <Label Background="#C1172F" Foreground="White"  Grid.Column="1" Grid.Row="0" Content="{Binding ChemicalGraphLabel}" FontSize="20"  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" ></Label>
        </Grid>


        <!--exit popup-->
        <Popup Name="ExitPopUp"    Placement="Center" IsOpen="{Binding UserResponse, Mode=TwoWay}" 
         AllowsTransparency = "False" PopupAnimation = "Slide" Height="400" Width="500" >
            <Grid  HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="48.5" >
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#EBFFFD" Offset="0"/>
                        <GradientStop Color="Black" Offset="2"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <!--<ColumnDefinition Width="*" />-->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="31" />
                    <RowDefinition Height="70" />
                    <RowDefinition Height="70" />
                </Grid.RowDefinitions>
                <Label Height="31"  FontFamily="Humanst521 Lt B"  HorizontalContentAlignment="Center" Content="{x:Static p:Resources.IndiSCADAClosing}"  Grid.Column="0" Foreground="Black" HorizontalAlignment="Center"   Grid.Row="0" FontWeight="Bold" ></Label>
                <!--<Button FontFamily="Humanst521 Lt B" Name="btnPopupClose"  Content="X" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center"  Height="31" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Margin="129,0,0,0"  VerticalAlignment="Top" Width="46" Click="BtnPopupClose_Click"   />-->
                <!--<TextBox Foreground="Black" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Hanger Type" Grid.Column="0" Grid.Row="1"  Text="{Binding NextloadSetting.ParameterName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"></TextBox>
                <TextBox Foreground="Black" materialDesign:HintAssist.Foreground="GreenYellow" Margin="5" materialDesign:TextFieldAssist.UnderlineBrush="GreenYellow"   BorderBrush="WhiteSmoke" HorizontalContentAlignment="Left" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Part Quantity" Grid.Column="0" Grid.Row="2" Text="{Binding NextloadSetting.Unit, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" ></TextBox>-->
                <Label Height="31"  FontFamily="Humanst521 Lt B"  HorizontalContentAlignment="Center" Content="{x:Static p:Resources.closeIndiSCADAWarning}"  Grid.Column="0" Grid.ColumnSpan="2" Foreground="Black" HorizontalAlignment="Center"   Grid.Row="1" FontWeight="Bold" ></Label>
                <Button BorderBrush="GreenYellow" ToolTip="Yes" Command="{Binding ExitYes}" Content="Yes" Grid.Row="2" Grid.Column="0" VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" Name="btnCloseYes"></Button>
                <Button BorderBrush="GreenYellow" ToolTip="No" Command="{Binding ExitNo}" Content="No" Grid.Row="2" Grid.Column="1" VerticalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="0 0 8 8" Name="btnCloseNo" >
                </Button>
            </Grid>
        </Popup>

        <!--"Summery details Popup"-->
        <Popup Name="SummeryPopup" IsOpen="{Binding IsOpenSummeryPopup}"  Placement="Center"  >
            <Grid  HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#41A175" Offset="0"/>
                        <GradientStop Color="Black" Offset="2"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="100*" />
                    <RowDefinition Height="400*" />
                    <!--<RowDefinition Height="400*" />-->
                </Grid.RowDefinitions>

                <Button  FontSize="20" FontWeight="ExtraBold"  Command="{Binding ExitSummeryPopup}"  Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Right" Content="X" Background="Red"   Name="exitBTN" />
                <Label Height="31" Grid.Row="1" Grid.Column="0"  FontFamily="Humanst521 Lt B"  HorizontalContentAlignment="Center" Content="{Binding SummaryName}"  Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold" ></Label>

                <!--<syncfusion1:SfDataGrid Name="dgvAlarmAndEvent1" Foreground="Black" SelectionForegroundBrush="Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  FontSize="16"
                                        Background="WhiteSmoke" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                                        ShowRowHeader="True" RowSelectionBrush="WhiteSmoke" AutoGenerateColumns="True" Grid.Column="0" Grid.Row="2"  Margin="5"
                                      ItemsSource="{Binding SummaryPopupData,UpdateSourceTrigger=PropertyChanged}" ColumnSizer="None" AllowResizingColumns="True"    > 
                </syncfusion1:SfDataGrid>-->

                <!--<syncfusion1:SfDataGrid  x:Name="dgvAlarmAndEvent1"  Grid.Row="2" Grid.Column="0" 
                        AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                        ColumnSizer="Star" Margin="5" FontSize="16"
                        ItemsSource="{Binding SummaryPopupData,UpdateSourceTrigger=PropertyChanged}" Background="WhiteSmoke"/>-->

                <DataGrid x:Name="dgvAlarmAndEvent"  Grid.Row="3" Grid.Column="0"  Background="WhiteSmoke" HorizontalAlignment="Center" VerticalAlignment="Center" 
                          ItemsSource="{Binding SummaryPopupData,UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="True"  Margin="5" FontSize="16">

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                </DataGrid>

            </Grid>
        </Popup>

        <Popup  Name="LanguageSelectionPopUp"  IsOpen ="{Binding IsOpenLangugePopup, UpdateSourceTrigger=PropertyChanged}"  Placement="MousePoint">
            <Grid  HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="70.5" >
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="DarkTurquoise" Offset="0"/>
                        <GradientStop Color="Black" Offset="2"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" /> 
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Button  Margin="0,0,0,10"  FontSize="17" FontWeight="ExtraBold"  Command="{Binding ExitLanguageSelectionPopup}"  Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Right" Content="X" Background="Red"   Name="ExitLanguagePopupBTN" />
                <Label Margin="20,0,20,0" Height="31" Name="EnglishLabel" FontFamily="Humanst521 Lt B" Content="English"  HorizontalContentAlignment="Center"  Grid.Column="0" Foreground="Yellow" HorizontalAlignment="Center"   Grid.Row="1"  FontWeight="Bold">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding ChangeLanguageClick}"  CommandParameter="English"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>

                <Label Margin="20,0,20,0" Height="31" Name="HindiLabel" FontFamily="Humanst521 Lt B"   Content="हिंदी"  HorizontalContentAlignment="Center"  Grid.Column="0" Foreground="Yellow" HorizontalAlignment="Center"   Grid.Row="2"  FontWeight="Bold" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding ChangeLanguageClick}"  CommandParameter="हिंदी"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>

                <Label Margin="20,0,20,0" Height="31" Name="MarathiLabel" FontFamily="Humanst521 Lt B"  Content="मराठी"   HorizontalContentAlignment="Center"  Grid.Column="0" Foreground="Yellow" HorizontalAlignment="Center"   Grid.Row="3"  FontWeight="Bold" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding ChangeLanguageClick}"  CommandParameter="मराठी"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>

            </Grid>
        </Popup>
        
  
        
    </Grid>

</syncfusionWindow:ChromelessWindow>